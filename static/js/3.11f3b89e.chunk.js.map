{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Utils/Language.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/LeaveVoiceChatDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Popup/ReportChatDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/UnpinMessageDialog.js","Utils/Game.js","Components/Actions.js","Assets/Icons/CallEnd.js","Components/Calls/GroupCallPanelButtons.js","Components/Calls/GroupCallMicAmplitude.js","Utils/Text.js","Components/Calls/GroupCallSettings.js","Assets/Icons/Tune.js","Components/Calls/GroupCallSettingsButton.js","Assets/Icons/More.js","Components/Calls/CallPanel.js","Components/Calls/Call.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Assets/Icons/Mic.js","Assets/Icons/MicOff.js","Components/Calls/BlobDrawable.js","Components/Calls/LineBlobDrawable.js","Components/Calls/TopBar.js","Components/Calls/GroupCallTopPanel.js","Assets/Icons/PlaylistEdit.js","Assets/Icons/Block.js","Assets/Icons/Broom.js","Assets/Icons/Phone.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Calls/GroupCallJoinPanelSubtitle.js","Components/Calls/GroupCallRecentParticipants.js","Components/Calls/GroupCallJoinPanel.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/ForwardTargetChat.js","Components/Popup/ForwardDialog.js","Components/Calls/Button.js","Components/Calls/GroupCallMicButtonHint.js","Components/Calls/GroupCallMicButton.js","Assets/Icons/AddMember.js","Assets/Icons/MicOutlined.js","Assets/Icons/MicOffOutlined.js","Components/Calls/GroupCallParticipant.js","Components/Calls/GroupCallParticipants.js","Components/Calls/GroupCallPanel.js","Components/Calls/GroupCall.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Player/PipPlayer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","AlertDialog","handleClose","onClose","params","t","title","message","ok","cancel","getFormattedText","open","manager","modalManager","transitionDuration","classes","paper","DialogContentText","DialogActions","onClick","color","withTranslation","BlockSenderDialog","reportSpam","deleteChat","handleReportSpamChange","handleDeleteChatChange","sender","text","entities","reportText","user_id","LStore","formatString","getUserShortName","getSimpleMarkupEntities","getString","chat_id","location","getChatLocation","address","isChannelChat","aria-labelledby","FormControlLabel","control","Checkbox","checked","onChange","label","ClearHistoryDialog","handleRevokeChange","revoke","chatId","canBeDeletedForAllUsers","getChatShortTitle","ChatTile","isPrivateChat","style","marginLeft","prevChatId","ChatStore","get","can_be_deleted_for_all_users","sprintf","key","args","postProcess","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","DeleteMessagesDialog","messageIds","count","confirm","isSupergroup","formatPluralString","prevMessageIds","messageId","MessageStore","InputPasswordDialog","handleChange","e","password","target","handleClickShowPassword","showPassword","getErrorMessage","error","startsWith","str","replace","parseInt","timeString","floor","loading","passwordHint","password_hint","errorMessage","FormControl","fullWidth","InputLabel","htmlFor","Boolean","Input","autoFocus","autoComplete","type","disabled","endAdornment","InputAdornment","position","IconButton","aria-label","edge","FormHelperText","LeaveChatDialog","getDeleteDialogText","chat","supergroup","SupergroupStore","supergroup_id","is_channel","LeaveVoiceChatDialog","discard","handleDiscardChange","NotificationTimer","handleTimer","Date","seconds","expire","timeout","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","setInterval","Typography","toFixed","CircularProgress","size","variant","OpenGameDialog","game","userId","getUserFullName","OpenUrlDialog","url","overflowWrap","PinMessageDialog","prevMessageId","ReportChatDialog","handleReport","ListItem","button","ListItemText","primary","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","domain","bot_user_id","request_write_access","text1","UserStore","getMyId","entities1","option1","option2","text2","entities2","display","flexDirection","UnpinMessageDialog","openGameInBrowser","sharedPreferences","JSON","parse","localStorage","getItem","existing","hash","addHash","encodeURIComponent","chars","array","Uint8Array","window","crypto","getRandomValues","setItem","stringify","index","indexOf","curHash","substring","newWindow","opener","Actions","leaveChat","clearHistory","deleteMessages","pinMessage","unpinMessage","alert","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","leaveVoiceChatAlert","reportChatAlert","onClientUpdateReportChat","update","onClientUpdateBlockSender","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateLeaveVoiceChatAlert","onClientUpdateOpenGameAlert","isVerified","handleOpenGameContinue","onClientUpdateOpenUrlAlert","ask","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","enqueueSnackbar","closeSnackbar","action","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","onClientUpdateAlert","onClientUpdateUnpinMessage","isMeChat","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","onClientUpdateLeaveChat","onClientUpdateClearHistory","handleClearHistoryContinue","AppStore","getChatId","request","remove_from_chat_list","handleScheduledAction","handleLeaveContinue","a","undo","getLeaveChatNotification","requests","isChatMember","push","isCreator","status","is_member","handleDeleteMessagesContinue","clearSelection","message_ids","clientUpdateType","snackKey","clientUpdate","inProgress","addScheduledAction","Number","MAX_VALUE","persist","removeScheduledAction","pinMessageAction","canPinMessages","unpinMessageAction","closePinned","unpinAllMessages","data","getClientData","clientData","unpinned","handleAlertContinue","onResult","event","preventDefault","handleRequestUrlContinue","values","buttonId","message_id","button_id","allow_write_access","httpUrl","handleInputPasswordContinue","onCloseDialog","handleBlockSenderContinue","blockSender","reason","reportChat","canDeleteChat","handleLeaveVoiceChatContinue","resultParams","handleReportChatContinue","showSnackbar","Close","on","off","PureComponent","enhance","compose","withSnackbar","GroupCallPanelButtons","onUpdateGroupCallParticipant","group_call_id","participant","call","groupCallId","getCallStatus","connected","onUpdateGroupCall","group_call","onClientUpdateGroupCall","onClientUpdateGroupCallConnectionState","CallStore","currentGroupCall","nextProps","nextState","nextContext","children","classNames","GroupCallMicAmplitude","audioContext","AudioContext","webkitAudioContext","timer","stream","addAnalyser","removeAnalyser","streamSource","createMediaStreamSource","analyser","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","connect","analyse","disconnect","frequencyBinCount","getByteFrequencyData","getAmplitude","bars","viewBox","fill","strokeWidth","width","copy","navigator","clipboard","writeText","console","copyOld","element","successful","document","createElement","contentEditable","readOnly","all","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","GroupCallSettings","onKeyDown","modals","isComposing","openDeviceSelect","handleCloseDeviceSelect","stopPropagation","handleCancel","muteNewParticipants","mute_new_participants","allowedChangeMuteNewParticipants","allowed_change_mute_new_participants","onDeviceChange","mediaDevices","enumerateDevices","devices","outputDeviceId","getOutputDeviceId","filter","kind","deviceId","inputAudioDeviceId","getInputAudioDeviceId","inputAudio","inputVideoDeviceId","getInputVideoDeviceId","inputVideo","handleOutputChange","handleCopyLink","username","getChatUsername","telegramUrlOption","handleOpenDeviceSelect","handleSelectDevice","setOutputDeviceId","streamManager","inputAudioStream","getAudioTracks","getStream","audio","exact","video","currentCall","inputVideoStream","handleEnd","leaveGroupCall","handleMuteNewParticipants","toggleMuteNewParticipants","handleDone","setInputAudioDeviceId","setInputVideoDeviceId","keyboardHandler","KeyboardHandler","addEventListener","KeyboardManager","add","removeEventListener","remove","closeStreams","callId","outputDeviceInfo","find","outputString","inputAudioDeviceInfo","inputAudioString","inputVideoDeviceInfo","inputVideoString","items","map","canManage","canManageVoiceChats","onMouseDown","Switch","disableRipple","root","switchBase","colorSecondary","track","prevGroupCallId","prevCallId","muteSettings","groupCall","GroupCallSettingsButton","Tune","CallPanel","handleFullScreenChange","fullScreen","isFullScreen","handleClick","handleAccept","p2pAcceptCall","handleDiscard","p2pDiscardCall","handleOpenSettings","openSettings","handleCloseSettings","closeGroupCallPanel","handleShareScreen","handleCloseContextMenu","screenStream","p2pStopScreenSharing","p2pStartScreenSharing","handleFullScreen","setTimeout","exitFullscreen","requestFullscreen","handleOpenContextMenu","currentTarget","anchorEl","callPanelRef","createRef","contextMenu","left","callPanel","current","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","method","mozRequestFullScreen","webkitRequestFullscreen","mozCancelFullScreen","webkitExitFullscreen","p2pGet","screenSharing","ref","Popover","container","getContentAnchorEl","disableRestoreFocus","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","ListItemClasses","focusVisible","TouchRippleProps","child","rippleVisible","autoPlay","muted","CallEnd","Call","onClientUpdateGroupCallFullScreen","fullscreen","handleMouseDown","nativeEvent","which","getElementById","mouseDownRoot","pageX","pageY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","onWindowResize","player","oldLeft","oldTop","normalizePosition","startLeft","startTop","setPosition","pipParams","documentElement","clientWidth","clientHeight","prevLeft","prevTop","checkGlue","playerWidth","playerHeight","documentWidth","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","clamp","glueTop","glueBottom","DialogTitle","onFastUpdatingComplete","forceUpdate","onUpdateChatTitle","showSavedMessages","isChatVerified","getChatTitle","defaultProps","DialogStatus","onUpdateUserStatus","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","basic_group","onUpdateSupergroup","externalSubtitle","Chat","onSelect","onTileSelect","showStatus","big","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","alignItems","ListItemIcon","tabIndex","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","set","ContextMenu","handleOpenMessage","openChat","handleForward","forwardMessages","handleDelete","anchorPosition","showOpenMessage","can_be_forwarded","can_be_deleted_only_for_self","anchorReference","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","photo","clientX","clientY","FileStore","openMedia","minithumbnail","miniSrc","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","sizes","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","thumbnail","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","caption","decodedUrl","decodeURI","hostname","URL","split","punycode","ToUnicode","content","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","trim","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFirstLetter","entity","SharedVoiceNote","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","getDurationString","SharedMediaContent","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","query","sender_user_id","from_message_id","limit","finally","currentParams","total_count","concat","isValidMessage","incompleteResults","setItems","store","getStore","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","loadUsersContent","loadChatsContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","height","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","voice_note","ChatDetails","loadContent","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","toLowerCase","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","chatIds","getChatUserId","offset_chat_id","chat_ids","minHeight","chats","SharedMediaHeader","handleSearch","searchInputRef","innerText","onSearch","onCloseSearch","openSearch","handleKeyDown","keyCode","handleKeyUp","innerHTML","handlePaste","plainText","clipboardData","getData","ANIMATION_DURATION_200MS","placeholder","suppressContentEditableWarning","onKeyUp","onPaste","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","force","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","onUpdateMessageSendAcknowledged","sendingState","old_message_id","sending_state","newMessageId","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","Pending","Sent","Succeeded","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","offset_order","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","dialog","hidden","isLastPinned","ApplicationStore","deleteChatTitle","getDeleteChatTitle","isSelected","isUnread","isArchived","showOnline","showGroupCall","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","overScanCount","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollBottom","max","removeItem","clear","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","CacheManager","cacheKey","filesKey","contactsKey","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","useTestDC","parameters","STORAGE_CACHE_TEST_KEY","STORAGE_CACHE_KEY","STORAGE_CONTACTS_TEST_KEY","STORAGE_CONTACTS_KEY","STORAGE_FILES_TEST_KEY","STORAGE_FILES_KEY","filtersKey","STORAGE_FILTERS_TEST_KEY","STORAGE_FILTERS_KEY","registerKey","STORAGE_REGISTER_TEST_KEY","STORAGE_REGISTER_KEY","saveInternal","leading","trailing","promises","load","catch","Promise","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","openSupportChat","searchChat","getAuthorizationState","showClose","mainMenuControl","Menu","disableAutoFocusItem","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","hiddenChats","delete","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","stub","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","log","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","shortTitle","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","selected","tile","UserTile","SectionHeader","command","multiline","Search","blur","concatSearchResults","arr","j","searchText","sessionId","savedMessages","localPromise","latinText","latinLocalPromise","cyrillicText","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","SEARCH_GLOBAL_TEXT_MIN","globalPromises","globalPromise","latinTrimmedText","USERNAME_LENGTH_MIN","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","savedMessagesPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","wrapperRef","searchRef","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","play","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","themeOptions","palette","disableEnforceFocus","aria-describedby","component","FormLabel","focused","RadioGroup","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","sendByCtrlEnterOption","SEND_BY_CTRL_ENTER_KEY","sendByCtrlEnter","Colorize","handleSetOption","inputProps","isMacOS","Language","languages","language_packs","native_name","handleMuteFor","property","settings","mute_for","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","AddParticipants","newArray","selectedItems","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","showArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","archiveTitle","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","diff","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","altKey","ctrlKey","metaKey","code","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","link","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","reply_to_message_id","input_message_text","disable_web_page_preview","clear_draft","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","input_message_content","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","permissions","can_send_messages","rotateZ","angle","originX","originY","X","Y","BlobDrawable","maxRadius","minRadius","cubicBezierK","N","L","tan","radius","radiusNext","angleNext","progress","speed","pointStart","pointEnd","generateBlob","angleDif","radDif","random","amplitude","speedScale","cX","cY","canvas","paint","getContext","ctx","beginPath","progressNext","r1","r2","angle1","angle2","l","mapPoints","moveTo","bezierCurveTo","closePath","points","result1","result2","LineBlobDrawable","bottom","pinnedTop","progressToPinned","lineTo","WeavingState","stateId","shader","createGradient","fillStyle","getGradientFromType","dt","x0","y0","gradient","createLinearGradient","addColorStop","TopBar","handleDevicePixelRatioChanged","scale","devicePixelRatio","topBar","handleResize","resizeHandler","resizing","resizeCanvas","invokeDraw","handleBlur","raf","mounted","lbd","lbd1","lbd2","currentState","previousState","progressToState","newTime","lastUpdateTime","animateToAmplitude","animateAmplitudeDiff","amplitude2","animateAmplitudeDiff2","top1","top2","clearRect","alpha","paint1","globalAlpha","setCurrentState","animated","states","matchMedia","setAmplitude","GroupCallTopPanel","onClientUpdateGroupCallAmplitudeChange","amplitudes","topBarRef","switchButtonState","saveMessagesScrollPosition","restoreMessagesScrollPosition","handleMicrophone","can_unmute_self","changeUserMuted","handleLeave","handleOpenGroupCall","openGroupCallPanel","elements","getElementsByClassName","openPanel","offsetHeightDiff","Mic","MicOff","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","handleStartGroupCall","showAlert","startGroupCall","handleStartP2PCall","p2pStartCall","openReportChat","voice_chat_group_call_id","canClearHistory","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","manageVoiceChats","reported","canBeReported","called","canBeCalled","p2pCallsEnabled","Broom","Block","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","timingFunction","animateOnMount","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","canReport","PinnedMessageBorder","drawRect","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","currentMessageId","currentPrevMessageId","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","prevMessage","prevContent","prevPropsChatId","Header","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","handlePinClick","getConnectionState","showProgressAnimation","HeaderProgress","PlaylistEdit","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","handlePlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","rate","Time","onClientUpdateMediaTime","currentTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","HeaderPlayer","handleSeekForward","videoRef","handleSeek","PLAYER_SEEK_STEP_BIG","handleSeekBackward","handleSeekTo","seekTime","paused","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","getCurrentTime","playing","srcSource","pause","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","setCurrentTime","handleLoadedMetadata","hasVoice","buffered","videoWidth","videoHeight","captureStream","mozCaptureStream","handleProgress","handleTimeUpdate","handleCanPlay","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","remote","unique_id","clearCurrentTime","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","disablePictureInPicture","onLoadedMetadata","onCanPlay","onPlay","onPause","onEnded","onTimeUpdate","onProgress","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","for_album","for_comment","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canSendMessages","canBePinned","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","ids","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","round","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","handleMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","GroupCallJoinPanelSubtitle","participantCount","participant_count","participantsOnly","GroupCallRecentParticipants","speakers","recent_speakers","updateSpeakers","PROFILE_PHOTO_PRELOAD_TIME_MS","lhs","rhs","is_speaking","speakersEquals","speaking","prevId","GroupCallJoinPanel","handleUpdateChatVoiceChat","handleUpdateGroupCall","handleClientUpdateGroupCall","isCurrent","is_joined","joinGroupCall","MessageContext","createContext","withMessage","MessageComponent","Consumer","handleCallbackQueryAnswer","via_bot_user_id","show_alert","showOpenGameAlert","is_verified","showOpenUrlAlert","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","onError","forward_text","skip_confirm","showRequestUrlAlert","in_current_chat","inline","setText","openChatSelect","ArrowTopRight","ShareFilled","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","reply_markup","isMetaBubble","getMessageStyle","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","ignoreUnread","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","ttl","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","inputMessageContent","forward","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","handleInViewport","elementRect","contentRect","getBoundingClientRect","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","ForwardTargetChat","ForwardDialog","getPublicMessageLink","getChatsPromise","publicMessageLink","getForwardPhotoSize","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","handleSearchKeyDown","handleSearchKeyUp","searchResults","globalSearchResults","chatsSource","hasSearchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","OvershootInterpolator","tension","mTension","DecelerateInterpolator","factor","mFactor","pow","AccelerateInterpolator","mDoubleFactor","createRadialGradient","RadialProgressView","setUseSelfAlpha","useSelfAlpha","setAlpha","setNoProgress","noProgress","setProgress","currentProgress","animatedProgress","progressAnimationStart","progressTime","updateAnimation","radOffset","rotationTime","circle","circleProgress","currentProgressTime","risingTime","risingCircleLength","currentCircleLength","accelerateInterpolator","getInterpolation","decelerateInterpolator","old","progressDiff","setSize","setStrokeWidth","lineWidth","updateProgressPaint","setProgressColor","progressColor","toCircle","circleRect","translate","radStart","drawingCircleLength","radLength","arc","progressPaint","restore","isCircle","lineCap","strokeStyle","Button","switchProgress","tinyWaveDrawable","buttonDefaultRadius","buttonRadius","bigWaveDrawable","canSwitchProgress","radialProgressView","invalidateColors","lightingColor","fillColors","colorsTmp","oldLight","newLight","blendARGB","currentLightColor","radialGradient","showWaves","showLighting","showWavesProgress","showLightingProgress","showWavesProgressInterpolated","overshootInterpolator","resetTransform","paintTmp","scaleLight","drawCircle","updateMuteButton","muteButtonState","updateMuteButtonState","radialPaint","generateInitBlob","colorsToSet","color1","color2","c1","c2","inverseRatio","g","strToHex","justifyContent","cursor","GroupCallMicButtonHint","GroupCallMicButton","buttonRef","is_muted","GroupCallParticipant","handleOpenProfile","handleSendMessage","handleUnmute","is_muted_for_all_users","is_muted_for_current_user","can_be_muted_for_all_users","can_be_unmuted_for_all_users","prevUserId","participants","GroupCallParticipants","participantsMap","updateParticipants","preloadContent","manageGroupCalls","AddMember","GroupCallPanel","GroupCall","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","videoInfo","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","thumb","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","oldUrl","scrollToHash","handleBack","instantViewerRef","articleRef","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","scrollIntoView","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","PipPlayer","onClientUpdateMediaShortcut","PLAYER_SEEK_STEP_SMALL","handleVolume","PLAYER_VOLUME_STEP","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","handleLoadedData","waiting","handlePause","handleVolumeChange","onVolumeChange","handleWaiting","startStopPlayer","handlePlayerMouseDown","pip","offsetX","offsetY","draggingTime","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","connectPlayer","disconnectPlayer","pipPlayer","onloadedmetadata","onloadeddata","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","bufferedTime","Player","getBufferedTime","bufferedValue","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","onMouseMove","onDoubleClick","onBlur","Hint","rail","onChangeCommitted","FullScreen","Progress","prevVideo","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateCallPanel","onClientUpdateGroupCallPanel","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.11f3b89e.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport { getFormattedText } from '../../Utils/Message';\nimport './AlertDialog.css';\n\nclass AlertDialog extends React.Component {\n\n    handleClose = result => {\n        const { onClose } = this.props;\n\n        onClose && onClose(result);\n    };\n\n    render() {\n        const { params, t } = this.props;\n        if (!params) return null;\n\n        let { title, message, ok, cancel } = params;\n\n        if (message['@type'] === 'formattedText') {\n            message = getFormattedText(message, t, {});\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {message}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    { cancel && (\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\n                            {cancel}\n                        </Button>\n                    )}\n                    { ok && (\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\n                            {ok}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nAlertDialog.propTypes = {\n    params: PropTypes.object\n};\n\nexport default withTranslation()(AlertDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './BlockSenderDialog.css';\n\nclass BlockSenderDialog extends React.Component {\n    state = {\n        reportSpam: true,\n        deleteChat: true\n    };\n\n    handleReportSpamChange = () => {\n        const { reportSpam } = this.state;\n\n        this.setState({\n            reportSpam: !reportSpam\n        });\n    };\n\n    handleDeleteChatChange = () => {\n        const { deleteChat } = this.state;\n\n        this.setState({\n            deleteChat: !deleteChat\n        });\n    };\n\n    render() {\n        const { sender, onClose, t } = this.props;\n        if (!sender) return null;\n\n        const { reportSpam, deleteChat } = this.state;\n\n        let title = null;\n        let text = null;\n        const entities = [];\n        let reportText = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                const { user_id } = sender;\n\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\n                text = getSimpleMarkupEntities(text, entities);\n                reportText = LStore.getString('BlockContact');\n                break;\n            }\n            case 'messageSenderChat': {\n                const { chat_id } = sender;\n\n                const location = getChatLocation(chat_id);\n                if (location) {\n                    title = LStore.getString('ReportUnrelatedGroup');\n                    if (location.address) {\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\n                        text = getSimpleMarkupEntities(text, entities);\n                    } else {\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\n                    }\n                } else {\n                    title = LStore.getString('ReportSpamTitle');\n                    if (isChannelChat(chat_id)) {\n                        text = LStore.getString('ReportSpamAlertChannel');\n                    } else {\n                        text = LStore.getString('ReportSpamAlertGroup');\n                    }\n                }\n                reportText = LStore.getString('ReportChat');\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\n                    </DialogContentText>\n                    { sender['@type'] === 'messageSenderUser' && (\n                        <div className='block-sender-params'>\n                            <FormControlLabel\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\n                                label={t('DeleteReportSpam')}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\n                                label={t('DeleteThisChat')}\n                            />\n                        </div>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\n                        {reportText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nBlockSenderDialog.propTypes = {\n    sender: PropTypes.object\n};\n\nexport default withTranslation()(BlockSenderDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './InputPasswordDialog.css';\n\nclass InputPasswordDialog extends React.Component {\n\n    state = { };\n\n    handleChange = e => {\n        this.password = e.target.value;\n    };\n\n    handleClickShowPassword = () => {\n        const { showPassword } = this.state;\n\n        this.setState({ showPassword: !showPassword });\n    };\n\n    getErrorMessage = error => {\n        const { t } = this.props;\n\n        if (!error) return null;\n\n        if (error.message === 'PASSWORD_HASH_INVALID') {\n            return t('InvalidPassword');\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\n            const str = error.message.replace('Too Many Requests: retry after ', '');\n            try {\n                const time = parseInt(str);\n                const timeString = time < 60\n                    ? LStore.formatPluralString('Seconds', time)\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\n\n                return LStore.formatString('FloodWaitTime', timeString);\n            } catch (e) {\n                return error.message;\n            }\n        }\n\n        return error.message;\n    }\n\n    render() {\n        const { state, error, onClose, t } = this.props;\n        if (!state) return null;\n\n        const { showPassword, loading } = this.state;\n        const { password_hint: passwordHint } = state;\n\n        const errorMessage = this.getErrorMessage(error);\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('PleaseEnterCurrentPasswordTransfer')}\n                    </DialogContentText>\n                    <FormControl className='auth-input' fullWidth>\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\n                        <Input\n                            fullWidth\n                            autoFocus\n                            autoComplete='off'\n                            id='adornment-password'\n                            type={showPassword ? 'text' : 'password'}\n                            disabled={loading}\n                            error={Boolean(error)}\n                            onChange={this.handleChange}\n                            endAdornment={\n                                <InputAdornment position='end'>\n                                    <IconButton\n                                        aria-label='Toggle password visibility'\n                                        onClick={this.handleClickShowPassword}\n                                        edge='end'>\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                        />\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nInputPasswordDialog.propTypes = {\n    state: PropTypes.object,\n    error: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(InputPasswordDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './LeaveVoiceChatDialog.css';\n\nclass LeaveVoiceChatDialog extends React.Component {\n    state = {\n        discard: false\n    };\n\n    handleDiscardChange = () => {\n        const { discard } = this.state;\n\n        this.setState({\n            discard: !discard\n        });\n    };\n\n    render() {\n        const { onClose, t } = this.props;\n        const { discard } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {LStore.getString('VoipGroupLeaveAlertTitle')}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.getString('VoipGroupLeaveAlertText')}\n                    </DialogContentText>\n                    <FormControlLabel\n                        control={<Checkbox checked={discard} onChange={this.handleDiscardChange} color='primary' />}\n                        label={t('VoipGroupEndChat')}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, { discard })} color='secondary'>\n                        {t('VoipGroupLeave')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nLeaveVoiceChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveVoiceChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getUserFullName } from '../../Utils/User';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenGameDialog.css';\n\nclass OpenGameDialog extends React.Component {\n    render() {\n        const { game, params, onClose, t } = this.props;\n        if (!game) return null;\n\n        const { userId } = params;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenGameDialog.propTypes = {\n    game: PropTypes.object,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenGameDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenUrlDialog.css';\n\nclass OpenUrlDialog extends React.Component {\n    render() {\n        const { url, onClose, t } = this.props;\n        if (!url) return null;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { modalManager } from '../../Utils/Modal';\nimport './ReportChatDialog.css';\n\nclass ReportChatDialog extends React.Component {\n\n    handleReport = type => {\n        const { onClose } = this.props;\n\n        onClose && onClose(true, { '@type': type });\n    }\n\n    render() {\n        const { onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('ReportChat')}</DialogTitle>\n                <div className='report-chat-dialog-content'>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonSpam')}>\n                        <ListItemText primary={t('ReportChatSpam')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonFake')}>\n                        <ListItemText primary={t('ReportChatFakeAccount')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonViolence')}>\n                        <ListItemText primary={t('ReportChatViolence')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonPornography')}>\n                        <ListItemText primary={t('ReportChatPornography')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonChildAbuse')}>\n                        <ListItemText primary={t('ReportChatChild')}/>\n                    </ListItem>\n                    <ListItem className='report-chat-dialog-item' button onClick={() => this.handleReport('chatReportReasonCustom')}>\n                        <ListItemText primary={t('ReportChatOther')}/>\n                    </ListItem>\n                </div>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('ReportChat')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nReportChatDialog.propTypes = {\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ReportChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './RequestUrlDialog.css';\n\nclass RequestUrlDialog extends React.Component {\n    state = {\n        value1: true,\n        value2: true\n    };\n\n    handleValue1Change = () => {\n        const { value1 } = this.state;\n\n        this.setState({ value1: !value1 });\n    };\n\n    handleValue2Change = () => {\n        const { value2 } = this.state;\n\n        this.setState({ value2: !value2 });\n    };\n\n    render() {\n        const { url, params, onClose, t } = this.props;\n        if (!url) return null;\n\n        const { value1, value2 } = this.state;\n\n        const { result } = params;\n        if (!result) return null;\n\n        const { domain, bot_user_id, request_write_access } = result;\n\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\n        const entities1 = [];\n        text1 = getSimpleMarkupEntities(text1, entities1);\n        const option1 = (\n            <FormControlLabel\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\n            />\n        );\n\n        let option2 = null;\n        if (request_write_access) {\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\n            const entities2 = [];\n            text2 = getSimpleMarkupEntities(text2, entities2);\n            option2 = (\n                <FormControlLabel\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\n                />\n            );\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                    {option1}\n                    {option2}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nRequestUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(RequestUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function openGameInBrowser(url, message) {\n    let sharedPreferences = {};\n    try {\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\n    } catch (e) { }\n\n    const existing = sharedPreferences['' + message.id];\n    let hash = existing ? existing : ''\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\n    if (!existing) {\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const array = new Uint8Array(1);\n        for (let i = 0; i < 20; i++) {\n            window.crypto.getRandomValues(array)\n            hash += chars[array[0] % chars.length];\n        }\n\n        sharedPreferences['' + message.id] = hash;\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\n    }\n    addHash += hash;\n    const index = url.indexOf('#');\n    if (index < 0) {\n        url += '#' + addHash;\n    } else {\n        const curHash = url.substring(0, index + 1);\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\n            url += '&' + addHash;\n        } else {\n            if (curHash.length > 0) {\n                url += '?' + addHash;\n            } else {\n                url += addHash;\n            }\n        }\n    }\n\n    const newWindow = window.open();\n    newWindow.opener = null;\n    newWindow.location = url;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlertDialog from './Popup/AlertDialog';\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport LeaveVoiceChatDialog from './Popup/LeaveVoiceChatDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport OpenGameDialog from './Popup/OpenGameDialog';\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport ReportChatDialog from './Popup/ReportChatDialog';\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { clearSelection, closePinned, showSnackbar } from '../Actions/Client';\nimport { openGameInBrowser } from '../Utils/Game';\nimport { reportChat } from '../Actions/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport CloseIcon from '../Assets/Icons/Close';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null,\n        alert: null,\n        openUrlAlert: null,\n        openGameAlert: null,\n        requestUrlAlert: null,\n        inputPasswordAlert: null,\n        requestBlockSenderAlert: null,\n        leaveVoiceChatAlert: null,\n        reportChatAlert: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.on('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.on('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.off('clientUpdateLeaveVoiceChatAlert', this.onClientUpdateLeaveVoiceChatAlert);\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n        AppStore.off('clientUpdateReportChat', this.onClientUpdateReportChat);\n    }\n\n    onClientUpdateReportChat = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({ reportChatAlert: { chatId, messageIds }});\n    };\n\n    onClientUpdateBlockSender = update => {\n        const { sender } = update;\n\n        this.setState({ requestBlockSenderAlert: { sender }});\n    }\n\n    onClientUpdateInputPasswordAlert = update => {\n        const { state, onPassword } = update;\n\n        this.setState({ inputPasswordAlert: { state, onPassword } });\n    }\n\n    onClientUpdateLeaveVoiceChatAlert = update => {\n        const { params } = update;\n\n        this.setState({ leaveVoiceChatAlert: { params }});\n    }\n\n    onClientUpdateOpenGameAlert = update => {\n        const { game, params } = update;\n\n        if (params && params.isVerified) {\n            this.openGameAlert = { game, params };\n            this.handleOpenGameContinue(null, true);\n        } else {\n            this.setState({ openGameAlert: { game, params } });\n        }\n    }\n\n    onClientUpdateOpenUrlAlert = update => {\n        const { url, params } = update;\n\n        if (params && !params.ask) {\n            this.openUrlAlert = { url, params };\n            this.handleOpenUrlContinue(null, true);\n        } else {\n            this.setState({ openUrlAlert: { url, params } });\n        }\n    };\n\n    onClientUpdateRequestUrlAlert = update => {\n        const { url, params } = update;\n\n        this.setState({ requestUrlAlert: { url, params } });\n    }\n\n    onClientUpdateSnackbar = update => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n        const { message, action } = update;\n\n        enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: action(closeSnackbar)\n        });\n    };\n\n    onClientUpdateAlert = update => {\n        const { params } = update;\n\n        this.setState({ alert: { params } });\n    };\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = async (result, undo = true) => {\n        const { leaveChat } = this.state || this;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.leaveChat = null;\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        if (undo) {\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n        } else {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n\n            }\n        }\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                closeSnackbar(snackKey);\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            closeSnackbar(snackKey);\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            AppStore.removeScheduledAction(key);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        AppStore.removeScheduledAction(key);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    handleAlertContinue = result => {\n        const { alert } = this.state;\n        if (!alert) return;\n\n        const { params } = alert;\n        this.setState({ alert: null });\n\n        const { onResult } = params;\n        onResult && onResult(result);\n    };\n\n    handleOpenUrlContinue = (event, result) => {\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\n\n        this.setState({ openUrlAlert: null });\n        this.openUrlAlert = null;\n\n        if (!result) return;\n\n        const { url, onClick } = openUrlAlert;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            event && event.preventDefault();\n\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    handleOpenGameContinue = (event, result) => {\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\n\n        this.setState({ openGameAlert: null });\n        this.openGameAlert = null;\n\n        if (!result) return;\n\n        const { game, params } = openGameAlert;\n        if (!game) return;\n        if (!params) return;\n\n        const { url, message } = params;\n        if (!url) return;\n        if (!message) return;\n\n        openGameInBrowser(url, message);\n    };\n\n    handleRequestUrlContinue = async (event, open, values) => {\n        const { requestUrlAlert } = this.state;\n        this.setState({ requestUrlAlert: null });\n\n        if (!open) return;\n\n        const { params } = requestUrlAlert;\n        if (!params) return;\n\n        const { result, chatId, messageId, buttonId } = params;\n        if (!result) return;\n\n        if (!values.value1) {\n            this.openUrlAlert = { url: result.url };\n            this.handleOpenUrlContinue(event, open);\n        } else {\n            const httpUrl = await TdLibController.send({\n                '@type': 'getLoginUrl',\n                chat_id: chatId,\n                message_id: messageId,\n                button_id: buttonId,\n                allow_write_access: result.request_write_access && values.value2\n            });\n\n            this.openUrlAlert = { url: httpUrl.url };\n            this.handleOpenUrlContinue(event, open);\n        }\n    };\n\n    handleInputPasswordContinue = (result, password) => {\n        const { inputPasswordAlert } = this.state;\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\n\n        if (!result) {\n            onCloseDialog();\n            return;\n        }\n\n        const { onPassword } = inputPasswordAlert;\n        onPassword && onPassword(password, onCloseDialog, onError);\n    };\n\n    handleBlockSenderContinue = async (result, params) => {\n        const { requestBlockSenderAlert } = this.state;\n\n        this.setState({ requestBlockSenderAlert: null });\n\n        if (!result) {\n            return;\n        }\n\n        const { sender } = requestBlockSenderAlert;\n        if (!sender) return;\n\n        let chatId = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                blockSender(sender);\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\n                break;\n            }\n            case 'messageSenderChat': {\n                chatId = sender.chat_id;\n                break;\n            }\n        }\n\n        if (!params || params.reportSpam) {\n            const reason = getChatLocation(chatId)\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\n                : { '@type': 'chatReportReasonSpam' };\n\n            reportChat(chatId, reason);\n        }\n\n        if (!params || params.deleteChat) {\n            const deleteChat = canDeleteChat(chatId);\n            if (!deleteChat) return;\n\n            this.leaveChat = { chatId };\n            this.handleLeaveContinue(true, false);\n        }\n    };\n\n    handleLeaveVoiceChatContinue = (result, resultParams) => {\n        const { leaveVoiceChatAlert } = this.state;\n\n        this.setState({ leaveVoiceChatAlert: null });\n\n        const { params } = leaveVoiceChatAlert;\n        if (!params) return;\n\n        const { onResult } = params;\n\n        onResult && onResult(resultParams);\n    };\n\n    handleReportChatContinue = (result, params) => {\n        const { t } = this.props;\n        const { reportChatAlert } = this.state;\n\n        this.setState({ reportChatAlert: null });\n        if (!result) return;\n\n        const { chatId, messageIds } = reportChatAlert;\n\n        showSnackbar(t('ReportChatSent'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    render() {\n        const {\n            leaveChat,\n            clearHistory,\n            deleteMessages,\n            pinMessage,\n            unpinMessage,\n            alert,\n            openUrlAlert,\n            openGameAlert,\n            requestUrlAlert,\n            inputPasswordAlert,\n            requestBlockSenderAlert,\n            leaveVoiceChatAlert,\n            reportChatAlert\n        } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        } else if (alert) {\n            const { params } = alert;\n\n            return (\n                <AlertDialog\n                    params={params}\n                    onClose={this.handleAlertContinue} />\n            );\n        } else if (openUrlAlert) {\n            const { url, params } = openUrlAlert;\n\n            return (\n                <OpenUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleOpenUrlContinue}/>\n            );\n        } else if (openGameAlert) {\n            const { game, params } = openGameAlert;\n\n            return (\n                <OpenGameDialog\n                    game={game}\n                    params={params}\n                    onClose={this.handleOpenGameContinue}/>\n            );\n        } else if (requestUrlAlert) {\n            const { url, params } = requestUrlAlert;\n\n            return (\n                <RequestUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleRequestUrlContinue}/>\n            );\n        } else if (inputPasswordAlert) {\n            const { state, error } = inputPasswordAlert;\n\n            return (\n                <InputPasswordDialog\n                    state={state}\n                    error={error}\n                    onClose={this.handleInputPasswordContinue}/>\n            );\n        } else if (requestBlockSenderAlert) {\n            const { sender } = requestBlockSenderAlert;\n\n            return (\n                <BlockSenderDialog\n                    sender={sender}\n                    onClose={this.handleBlockSenderContinue}/>\n            );\n        } else if (leaveVoiceChatAlert) {\n            const { params } = leaveVoiceChatAlert;\n\n            return (\n                <LeaveVoiceChatDialog\n                    params={params}\n                    onClose={this.handleLeaveVoiceChatContinue}/>\n            );\n        } else if (reportChatAlert) {\n            const { chatId, messageIds } = reportChatAlert;\n\n            return (\n                <ReportChatDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleReportChatContinue}/>\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,9C10.4,9 8.85,9.25 7.4,9.72V12.82C7.4,13.22 7.17,13.56 6.84,13.72C5.86,14.21 4.97,14.84 4.17,15.57C4,15.75 3.75,15.86 3.5,15.86C3.2,15.86 2.95,15.74 2.77,15.56L0.29,13.08C0.11,12.9 0,12.65 0,12.38C0,12.1 0.11,11.85 0.29,11.67C3.34,8.77 7.46,7 12,7C16.54,7 20.66,8.77 23.71,11.67C23.89,11.85 24,12.1 24,12.38C24,12.65 23.89,12.9 23.71,13.08L21.23,15.56C21.05,15.74 20.8,15.86 20.5,15.86C20.25,15.86 20,15.75 19.82,15.57C19.03,14.84 18.14,14.21 17.16,13.72C16.83,13.56 16.6,13.22 16.6,12.82V9.72C15.15,9.25 13.6,9 12,9Z' />,\n    'CallEnd'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getCallStatus } from '../../Calls/Utils';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallPanelButtons.css'\n\nclass GroupCallPanelButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected } = this.state;\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        });\n    };\n\n    render() {\n        const { children } = this.props;\n        const { status, connected } = this.state;\n        // console.log('[call][GroupCallPanelButtons] render');\n\n        return (\n            <div className={classNames('group-call-panel-buttons', {\n                'group-call-connecting': !connected,\n                'group-call-muted': connected && status === 'muted',\n                'group-call-muted-by-admin': connected && status === 'forceMuted',\n                'group-call-unmuted': connected && status === 'unmuted',\n            })}>\n                {children}\n            </div>\n        );\n    }\n}\n\nGroupCallPanelButtons.propTypes = {};\n\nexport default GroupCallPanelButtons;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getAmplitude } from '../../Calls/Utils';\nimport './GroupCallMicAmplitude.css';\n\nclass GroupCallMicAmplitude extends React.Component {\n    constructor(props) {\n        super(props);\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.timer = null;\n\n        this.state = {\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.addAnalyser(stream);\n        }\n    }\n\n    componentWillUnmount() {\n        const { stream } = this.props;\n        if (stream) {\n            this.removeAnalyser(stream);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { stream } = this.props;\n        if (prevProps.stream !== stream) {\n            this.removeAnalyser(prevProps.stream);\n            this.addAnalyser(stream);\n        }\n    }\n\n    addAnalyser(stream) {\n        if (!stream) return;\n\n        const { audioContext } = this;\n        if (!audioContext) return;\n\n        this.streamSource = audioContext.createMediaStreamSource(stream);\n        if (!this.analyser) {\n            const analyser = audioContext.createAnalyser();\n            analyser.minDecibels = -100;\n            analyser.maxDecibels = -30;\n            analyser.smoothingTimeConstant = 0.05;\n            analyser.fftSize = 1024;\n\n            this.analyser = analyser;\n        }\n        this.streamSource.connect(this.analyser);\n\n        this.timer = setInterval(() => this.analyse(), 100);\n    }\n\n    removeAnalyser(stream) {\n        if (!stream) return;\n\n        if (this.analyser && this.streamSource) {\n            this.streamSource.disconnect(this.analyser);\n        }\n\n        clearInterval(this.timer);\n    }\n\n    analyse() {\n        const { analyser } = this;\n        if (!analyser) return;\n\n        const array = new Uint8Array(analyser.frequencyBinCount);\n        analyser.getByteFrequencyData(array);\n        const value = getAmplitude(array, 1.5);\n\n        this.setState({\n            value\n        });\n    }\n\n    render() {\n        const { value } = this.state;\n\n        let d = '';\n        for (let i = 0; i < 35; i++) {\n            const x = i * 8 + 1.5;\n            d += `M${x},0v15Z`;\n        }\n\n        const bars = (\n            <svg className='group-call-mic-amplitude-bars' viewBox='0 0 275 15'>\n                <path d={d} fill='currentColor' strokeWidth={3}/>\n            </svg>\n        );\n\n        return (\n            <div className='group-call-mic-amplitude'>\n                {bars}\n                <div className='group-call-mic-amplitude-bars-accent' style={{ width: 275 * value }}>\n                    {bars}\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallMicAmplitude.propTypes = {\n    stream: PropTypes.object\n};\n\nexport default GroupCallMicAmplitude;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport Switch from '@material-ui/core/Switch';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallMicAmplitude from './GroupCallMicAmplitude';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport { copy } from '../../Utils/Text';\nimport { canManageVoiceChats, getChatUsername } from '../../Utils/Chat';\nimport { getStream } from '../../Calls/Utils';\nimport { showSnackbar } from '../../Actions/Client';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport './GroupCallSettings.css';\n\nclass GroupCallSettings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = { };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                const { openDeviceSelect } = this.state;\n                if (openDeviceSelect) {\n                    this.handleCloseDeviceSelect();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n\n                this.handleCancel();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId, callId } = props;\n        const { prevGroupCallId, prevCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            let muteSettings = { };\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const {\n                    mute_new_participants: muteNewParticipants,\n                    allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n                } = groupCall;\n\n                muteSettings = {\n                    muteNewParticipants,\n                    allowedChangeMuteNewParticipants\n                }\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo,\n                ...muteSettings\n            };\n        } else if (prevCallId !== callId) {\n            const { devices } = CallStore;\n\n            const outputDeviceId = CallStore.getOutputDeviceId();\n            const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n            const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n            const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n            const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n            const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n            return {\n                prevCallId: callId,\n                devices,\n                outputDeviceId,\n                output,\n                inputAudioDeviceId,\n                inputAudio,\n                inputVideoDeviceId,\n                inputVideo\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.handleSelectDevice('inputAudio', CallStore.getInputAudioDeviceId());\n        navigator.mediaDevices.addEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.addEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.add(this.keyboardHandler);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        navigator.mediaDevices.removeEventListener('devicechange', this.onDeviceChange);\n        // navigator.permissions.removeEventListener('onchange', this.onDeviceChange);\n        KeyboardManager.remove(this.keyboardHandler);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n\n        this.closeStreams();\n    }\n\n    closeStreams() {\n        const { inputAudioStream, inputAudioDeviceId } = this.state;\n        if (inputAudioStream && (!CallStore.currentGroupCall || inputAudioDeviceId === CallStore.getInputAudioDeviceId())) {\n            inputAudioStream.getAudioTracks().forEach(x => {\n                x.stop();\n            });\n        }\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n        if (!group_call) return;\n\n        const {\n            id,\n            mute_new_participants: muteNewParticipants,\n            allowed_change_mute_new_participants: allowedChangeMuteNewParticipants\n        } = group_call;\n        if (id !== groupCallId) return;\n\n        this.setState({\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        });\n    };\n\n    onDeviceChange = async () => {\n        const devices = await navigator.mediaDevices.enumerateDevices();\n        CallStore.devices = devices;\n\n        const outputDeviceId = CallStore.getOutputDeviceId();\n        const output = (devices || []).filter(x => x.kind === 'audiooutput' && x.deviceId);\n\n        const inputAudioDeviceId = CallStore.getInputAudioDeviceId();\n        const inputAudio = (devices || []).filter(x => x.kind === 'audioinput' && x.deviceId);\n\n        const inputVideoDeviceId = CallStore.getInputVideoDeviceId();\n        const inputVideo = (devices || []).filter(x => x.kind === 'videoinput' && x.deviceId);\n\n        this.setState({\n            devices,\n            outputDeviceId,\n            output,\n            inputAudioDeviceId,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideo\n        });\n    };\n\n    handleOutputChange = event => {\n        const outputDeviceId = event.target.value;\n\n        this.setState({ outputDeviceId });\n    }\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { currentGroupCall } = CallStore;\n\n        const username = getChatUsername(currentGroupCall ? currentGroupCall.chatId : 0);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n        showSnackbar(t('LinkCopied'), closeSnackbar => snackKey => {\n            return (\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => { closeSnackbar(snackKey); }}>\n                    <CloseIcon />\n                </IconButton>\n            )\n        });\n    };\n\n    handleOpenDeviceSelect = async type => {\n        switch (type) {\n            case 'inputAudio': {\n                const { inputAudio } = this.state;\n                if (!inputAudio.length) {\n                    return;\n                }\n                break;\n            }\n            case 'output': {\n                const { output } = this.state;\n                if (!output.length) {\n                    return;\n                }\n                break;\n            }\n        }\n\n        this.setState({\n            openDeviceSelect: { type }\n        });\n    };\n\n    handleCloseDeviceSelect = () => {\n        this.setState({\n            openDeviceSelect: null\n        });\n    };\n\n    handleSelectDevice = async (type, deviceId) => {\n        this.handleCloseDeviceSelect();\n\n        switch (type) {\n            case 'output': {\n                CallStore.setOutputDeviceId(deviceId);\n                this.setState({\n                    outputDeviceId: deviceId\n                });\n                break;\n            }\n            case 'inputAudio': {\n                const { currentGroupCall } = CallStore;\n                if (!currentGroupCall) return;\n\n                const { streamManager } = currentGroupCall;\n                if (!streamManager) return;\n\n                const { inputAudioStream, inputAudioDeviceId } = this.state;\n                if (inputAudioDeviceId === deviceId && inputAudioStream) return;\n\n                if (inputAudioStream) {\n                    inputAudioStream.getAudioTracks().forEach(t => {\n                        t.stop()\n                    });\n                }\n\n                const stream = await getStream({\n                    audio: { deviceId: { exact: deviceId } },\n                    video: false\n                });\n\n                this.setState({\n                    inputAudioDeviceId: deviceId,\n                    inputAudioStream: stream\n                });\n                break;\n            }\n            case 'inputVideo': {\n                const { currentCall } = CallStore;\n                if (!currentCall) return;\n\n                const { inputVideoStream, inputVideoDeviceId } = this.state;\n                if (inputVideoDeviceId === deviceId && inputVideoStream) return;\n\n                if (inputVideoStream) {\n                    inputVideoStream.getAudioTracks().forEach(t => {\n                        t.stop()\n                    });\n                }\n\n                const stream = await getStream({\n                    audio: false,\n                    video: { deviceId: { exact: deviceId } }\n                });\n\n                this.setState({\n                    inputVideoDeviceId: deviceId,\n                    inputVideoStream: stream\n                });\n                break;\n            }\n        }\n    };\n\n    handleEnd = () => {\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        CallStore.leaveGroupCall(chatId, groupCallId, true);\n    };\n\n    handleMuteNewParticipants = () => {\n        const { groupCallId } = this.props;\n        const { muteNewParticipants } = this.state;\n\n        this.setState({\n            muteNewParticipants: !muteNewParticipants\n        });\n\n        CallStore.toggleMuteNewParticipants(groupCallId, !muteNewParticipants);\n    };\n\n    handleDone = async () => {\n        const { onClose } = this.props;\n        const { inputAudioDeviceId, inputAudioStream, inputVideoDeviceId, inputVideoStream } = this.state;\n\n        if (inputAudioStream && inputAudioDeviceId !== CallStore.getInputAudioDeviceId()) {\n            await CallStore.setInputAudioDeviceId(inputAudioDeviceId, inputAudioStream);\n        }\n\n        if (inputVideoStream && inputVideoDeviceId !== CallStore.getInputVideoDeviceId()) {\n            await CallStore.setInputVideoDeviceId(inputVideoDeviceId, inputVideoStream);\n        }\n\n        onClose && onClose();\n    };\n\n    handleCancel = () => {\n        const { onClose } = this.props;\n\n        onClose && onClose();\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const {\n            inputAudioDeviceId,\n            inputAudioStream,\n            inputAudio,\n            inputVideoDeviceId,\n            inputVideo,\n            outputDeviceId,\n            output,\n            openDeviceSelect,\n            muteNewParticipants,\n            allowedChangeMuteNewParticipants\n        } = this.state;\n\n\n        const outputDeviceInfo = output.find(x => x.deviceId === outputDeviceId || !outputDeviceId && x.deviceId === 'default');\n        const outputString = !outputDeviceInfo || outputDeviceInfo.deviceId === 'default' || !outputDeviceInfo.deviceId || !outputDeviceInfo.label ? t('Default') : outputDeviceInfo.label;\n\n        const inputAudioDeviceInfo = inputAudio.find(x => x.deviceId === inputAudioDeviceId || !inputAudioDeviceId && x.deviceId === 'default');\n        const inputAudioString = !inputAudioDeviceInfo || inputAudioDeviceInfo.deviceId === 'default' || !inputAudioDeviceInfo.deviceId || !inputAudioDeviceInfo.label ? t('Default') : inputAudioDeviceInfo.label;\n\n        const inputVideoDeviceInfo = inputVideo.find(x => x.deviceId === inputVideoDeviceId || !inputVideoDeviceId && x.deviceId === 'default');\n        const inputVideoString = !inputVideoDeviceInfo || inputVideoDeviceInfo.deviceId === 'default' || !inputVideoDeviceInfo.deviceId || !inputVideoDeviceInfo.label ? t('Default') : inputVideoDeviceInfo.label;\n\n        const { currentGroupCall } = CallStore;\n        const chatId = currentGroupCall ? currentGroupCall.chatId : 0;\n\n        const username = getChatUsername(chatId);\n\n        if (openDeviceSelect) {\n            const { type } = openDeviceSelect;\n            let items = [];\n            let deviceId = null;\n            switch (type) {\n                case 'output': {\n                    items = output;\n                    deviceId = outputDeviceId;\n                    break;\n                }\n                case 'inputAudio': {\n                    items = inputAudio;\n                    deviceId = inputAudioDeviceId;\n                    break;\n                }\n                case 'inputVideo': {\n                    items = inputVideo;\n                    deviceId = inputVideoDeviceId;\n                    break;\n                }\n            }\n\n            return (\n                <div className='group-call-settings-device-select'>\n                    <div className='group-call-settings-panel'>\n                        <div className='group-call-settings-panel-header'>\n                            <div className='group-call-panel-caption'>\n                                <div className='group-call-title'>{type === 'output' ? t('OutputDevice') : t('InputDevice')}</div>\n                            </div>\n                        </div>\n                        <div className='group-call-settings-panel-content'>\n                            {items.map(x => (\n                                <div key={x.deviceId} className='group-call-settings-panel-item' onClick={() => this.handleSelectDevice(type, x.deviceId)}>\n                                    <div className='group-call-settings-panel-item-title'>{x.label || t('Default')}</div>\n                                </div>\n                            ))}\n                        </div>\n                        <div className='group-call-settings-panel-buttons'>\n                            <div className='group-call-settings-panel-done' onClick={this.handleCloseDeviceSelect}>\n                                {t('OK')}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n\n\n        const canManage = canManageVoiceChats(chatId);\n        // console.log('[call][GroupCallSettings] render', muteNewParticipants, allowedChangeMuteNewParticipants);\n\n        return (\n            <div className='group-call-settings' onMouseDown={stopPropagation} onClick={this.handleCancel}>\n                <div className='group-call-settings-panel' onClick={stopPropagation}>\n                    <div className='group-call-settings-panel-header'>\n                        <div className='group-call-panel-caption'>\n                            <div className='group-call-title'>{t('Settings')}</div>\n                        </div>\n                    </div>\n                    <div className='group-call-settings-panel-content'>\n                        { canManage && allowedChangeMuteNewParticipants && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleMuteNewParticipants}>\n                                <div className='group-call-settings-panel-item-title'>{t('VoipGroupOnlyAdminsCanSpeak')}</div>\n                                <Switch\n                                    disableRipple\n                                    classes={{\n                                        root: 'group-call-settings-panel-switch-root',\n                                        switchBase: 'group-call-settings-panel-switch-base',\n                                        colorSecondary: 'group-call-settings-panel-switch-color-secondary',\n                                        checked: 'group-call-settings-panel-switch-checked',\n                                        track: 'group-call-settings-panel-switch-track'\n                                    }}\n                                    checked={muteNewParticipants}\n                                    onChange={this.handleMuteNewParticipants}/>\n                            </div>\n                        )}\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('output')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Speaker')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{outputString}</div>\n                        </div>\n\n                        <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputAudio')}>\n                            <div className='group-call-settings-panel-item-title'>{t('Microphone')}</div>\n                            <div className='group-call-settings-panel-item-subtitle'>{inputAudioString}</div>\n                        </div>\n\n                        { callId && (\n                            <div className='group-call-settings-panel-item' onClick={() => this.handleOpenDeviceSelect('inputVideo')}>\n                                <div className='group-call-settings-panel-item-title'>{t('Camera')}</div>\n                                <div className='group-call-settings-panel-item-subtitle'>{inputVideoString}</div>\n                            </div>\n                        )}\n                        <GroupCallMicAmplitude stream={inputAudioStream}/>\n                        { username && (\n                            <div className='group-call-settings-panel-item' onClick={this.handleCopyLink}>\n                                {t('VoipGroupCopyInviteLink')}\n                            </div>\n                        )}\n                        { canManage && (\n                            <div className='group-call-settings-panel-item group-call-settings-panel-item-secondary' onClick={this.handleEnd}>\n                                {t('VoipGroupEndChat')}\n                            </div>\n                        )}\n                    </div>\n                    <div className='group-call-settings-panel-buttons'>\n                        <div className='group-call-settings-panel-done' onClick={this.handleDone}>\n                            {t('Done')}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupCallSettings.propTypes = {\n    callId: PropTypes.number,\n    groupCallId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallSettings);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M3,17V19H9V17H3M3,5V7H13V5H3M13,21V19H21V17H13V15H11V21H13M7,9V11H3V13H7V15H9V9H7M21,13V11H11V13H21M15,9H17V7H21V5H17V3H15V9Z' />,\n    'Tune'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TuneIcon from '../../Assets/Icons/Tune';\nimport { stopPropagation } from '../../Utils/Message';\nimport './GroupCallSettingsButton.css';\n\nclass GroupCallSettingsButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='group-call-settings-button' onMouseDown={stopPropagation} onClick={onClick}>\n                <TuneIcon />\n            </div>\n        );\n    }\n}\n\nGroupCallSettingsButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default GroupCallSettingsButton;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\nimport GroupCallSettings from './GroupCallSettings';\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\nimport MenuIcon from '../../Assets/Icons/More';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getUserFullName } from '../../Utils/User';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallPanel.css';\n\nclass CallPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.callPanelRef = React.createRef();\n\n        this.state = {\n            openSettings: false,\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            fullScreen: false\n        };\n    }\n\n    componentDidMount() {\n        const callPanel = this.callPanelRef.current;\n        if (callPanel) {\n            callPanel.addEventListener('fullscreenchange', this.handleFullScreenChange);\n        }\n    }\n\n    componentWillUnmount() {\n        const callPanel = this.callPanelRef.current;\n        if (callPanel) {\n            callPanel.removeEventListener('fullscreenchange', this.handleFullScreenChange);\n        }\n    }\n\n    handleFullScreenChange = () => {\n        this.setState({\n            fullScreen: this.isFullScreen()\n        });\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleAccept = async event => {\n        event.stopPropagation();\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        await CallStore.p2pAcceptCall(callId);\n    };\n\n    handleDiscard = async event => {\n        event.stopPropagation();\n\n        const { callId } = this.props;\n        if (!callId) return;\n\n        await CallStore.p2pDiscardCall(callId, false, 0, false, 0);\n    };\n\n    handleOpenSettings = async event => {\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleShareScreen = () => {\n        this.handleCloseContextMenu();\n\n        const { currentCall } = CallStore;\n        if (!currentCall) return;\n\n        const { screenStream } = currentCall;\n        if (screenStream) {\n            CallStore.p2pStopScreenSharing();\n        } else {\n            CallStore.p2pStartScreenSharing();\n        }\n    };\n\n    handleFullScreen = () => {\n        this.handleCloseContextMenu();\n\n        setTimeout(() => {\n            if (this.isFullScreen()) {\n                this.exitFullscreen();\n                return;\n            }\n\n            this.requestFullscreen();\n        }, 250);\n    }\n\n    isFullScreen() {\n        const callPanel = this.callPanelRef.current;\n        if (!callPanel) return false;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        return fullscreenElement === callPanel;\n    }\n\n    requestFullscreen() {\n        const callPanel = this.callPanelRef.current;\n        if (!callPanel) return false;\n\n        const method = callPanel.requestFullscreen || callPanel.mozRequestFullScreen || callPanel.webkitRequestFullscreen;\n\n        method && method.call(callPanel);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { currentTarget } = event;\n\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { anchorEl } = this.state;\n\n        if (anchorEl) {\n            this.setState({ anchorEl: null });\n        } else {\n            this.setState({\n                anchorEl: currentTarget\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ anchorEl: null });\n    };\n\n    render() {\n        const { callId, t } = this.props;\n        const { openSettings, anchorEl, fullScreen } = this.state;\n        const { currentCall } = CallStore;\n        // if (!currentGroupCall) return null;\n\n        const call = CallStore.p2pGet(callId);\n        if (!call) return null;\n\n        const { user_id: userId } = call;\n\n        let screenSharing = currentCall && Boolean(currentCall.screenStream);\n\n        return (\n            <div className={classNames('group-call-panel', { 'full-screen': fullScreen })} ref={this.callPanelRef}>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption'>\n                        <div className='group-call-title'>{getUserFullName(userId, null)}</div>\n                        {/*<GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>*/}\n                    </div>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleOpenContextMenu}>\n                        <MenuIcon />\n                    </div>\n                    <Popover\n                        container={this.callPanelRef.current}\n                        classes={{\n                            paper: 'group-call-participant-menu-root'\n                        }}\n                        anchorEl={anchorEl}\n                        open={Boolean(anchorEl)}\n                        onClose={this.handleCloseContextMenu}\n                        getContentAnchorEl={null}\n                        disableRestoreFocus={true}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleShareScreen}>\n                                <ListItemText primary={screenSharing ? t('StopScreenSharing') : t('StartScreenSharing')} />\n                            </MenuItem>\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleFullScreen}>\n                                <ListItemText primary={fullScreen ? t('ExitFullScreen') : t('EnterFullScreen')} />\n                            </MenuItem>\n                        </MenuList>\n                    </Popover>\n                </div>\n                <div className='call-panel-content scrollbars-hidden'>\n                    <video id='call-output-video' autoPlay={true} muted={true}/>\n                    <video id='call-input-video' autoPlay={true} muted={true}/>\n                </div>\n                <GroupCallPanelButtons>\n                    {/*<GroupCallMicButton/>*/}\n                    <div className='group-call-panel-button'>\n                        <GroupCallSettingsButton onClick={this.handleOpenSettings}/>\n                        <div className='group-call-panel-button-text'>\n                            {t('Settings')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-answer' onMouseDown={stopPropagation} onClick={this.handleAccept}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {t('VoipAnswerCall')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleDiscard}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {t('VoipDeclineCall')}\n                        </div>\n                    </div>\n                </GroupCallPanelButtons>\n                {openSettings && <GroupCallSettings callId={callId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nCallPanel.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default withTranslation()(CallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CallPanel from './CallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass Call extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { callId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <CallPanel callId={callId}/>\n            </div>\n        )\n    }\n}\n\nCall.propTypes = {\n    callId: PropTypes.number\n};\n\nexport default Call;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {isPrivateChat(chatId) && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {phoneNumber ? formatPhoneNumber(phoneNumber) : t('PhoneHidden')}\n                                                </Typography>\n                                            }\n                                            secondary={t('Phone')}\n                                        />\n                                    </ListItem>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender } = last_message;\n        if (sender.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendAcknowledged', this.onUpdateMessageSendAcknowledged);\n    }\n\n    onUpdateMessageSendAcknowledged = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.setState({ sendingState: null });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === 0) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 50);\n    setTimeout(() => {\n        element.scrollTo({ top: 0, behavior });\n    }, 1);\n}\n\nexport function scrollBottom(element, behavior = 'smooth') {\n    if (!element) return;\n    if (element.scrollTop === element.scrollHeight - element.offsetHeight) return;\n\n    element.scrollTop = Math.max(element.scrollTop, element.scrollHeight - element.offsetHeight - 50);\n    setTimeout(() => {\n        element.scrollTo({ top: element.scrollHeight - element.offsetHeight, behavior });\n    }, 1);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport {\n    STORAGE_CACHE_KEY,\n    STORAGE_CACHE_TEST_KEY,\n    STORAGE_CONTACTS_KEY,\n    STORAGE_CONTACTS_TEST_KEY,\n    STORAGE_FILES_KEY,\n    STORAGE_FILES_TEST_KEY,\n    STORAGE_FILTERS_KEY,\n    STORAGE_FILTERS_TEST_KEY, STORAGE_REGISTER_KEY, STORAGE_REGISTER_TEST_KEY\n} from '../Constants';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        const { useTestDC } = TdLibController.parameters;\n        this.cacheKey = useTestDC ? STORAGE_CACHE_TEST_KEY : STORAGE_CACHE_KEY;\n        this.contactsKey = useTestDC ? STORAGE_CONTACTS_TEST_KEY : STORAGE_CONTACTS_KEY;\n        this.filesKey = useTestDC ? STORAGE_FILES_TEST_KEY : STORAGE_FILES_KEY;\n        this.filtersKey = useTestDC ? STORAGE_FILTERS_TEST_KEY : STORAGE_FILTERS_KEY;\n        this.registerKey = useTestDC ? STORAGE_REGISTER_TEST_KEY : STORAGE_REGISTER_KEY;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000, {\n            leading: false,\n            trailing: true\n        });\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove(this.cacheKey);\n                        CacheManager.remove(this.filesKey);\n                        if (this.cacheContacts) {\n                            CacheManager.remove(this.contactsKey);\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        const promises = [];\n        promises.push(CacheManager.load(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.load(this.filesKey).catch(error => null));\n        promises.push(CacheManager.load(this.filtersKey).catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load(this.contactsKey).catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n        // console.log('[f] cache.load', files);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[f] cache.parse', cache.files);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender } = last_message;\n                switch (sender['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        // console.log('[cm] save');\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal');\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save(this.cacheKey, cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        const results = await Promise.all(promises);\n        await CacheManager.save(this.filesKey, results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save(this.contactsKey, contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save(this.filtersKey, this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove(this.cacheKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filesKey).catch(error => null));\n        promises.push(CacheManager.remove(this.filtersKey).catch(error => null));\n        promises.push(CacheManager.remove(this.contactsKey).catch(error => null));\n        promises.push(CacheManager.remove(this.registerKey).catch(error => null));\n\n        Promise.all(promises);\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport { openSupportChat } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n\n        openSupportChat();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div className='search-input-wrapper'>\n                    {showIcon && <SearchIcon className='search-input-icon' />}\n                    <div\n                        id='search-inputbox'\n                        ref={inputRef}\n                        placeholder={hint || t('Search')}\n                        contentEditable\n                        suppressContentEditableWarning\n                        onKeyDown={this.handleKeyDown}\n                        onKeyUp={this.handleKeyUp}\n                        onPaste={this.handlePaste}\n                        onInput={this.handleInput}\n                        onFocus={onFocus}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport { openChatList } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListMain' });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        if (chatListEquals(this.state.chatList, chatList)) {\n            this.scrollToTop();\n        } else {\n            this.setState({\n                chatList,\n                params: {\n                    loading: false,\n                    completed: false\n                }\n            }, () => {\n                this.loadFirstSlice();\n            });\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        // console.log('[vl] reorderChats', orderedChatIds);\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        if (this.stub) return;\n\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const list = current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        let offsetChat = null;\n        if (!replace && chats && chats.length > 0) {\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\n            if (offsetChat) {\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\n                offsetChatId = offsetChat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source, stub = false) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        if (stub) {\n            return <DialogPlaceholder key={index} index={index} />\n        }\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        this.source = [];\n        this.stub = false;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                this.source = Array.from(Array(10));\n                this.stub = true;\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source, this.stub)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    cacheItems: PropTypes.array,\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    handleClick = () => {\n        const { innerListRef } = this.props;\n        if (!innerListRef) return;\n\n        const { current: list } = innerListRef;\n        if (!list) return;\n\n        list.scrollToTop();\n    };\n\n    render() {\n        const { t, innerListRef, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline showGroupCall/>\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender.user_id && chatSearch ? (\n                <UserTile userId={sender.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, SEARCH_GLOBAL_TEXT_MIN, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= SEARCH_GLOBAL_TEXT_MIN) {\n                trimmedText = trimmedText.length === SEARCH_GLOBAL_TEXT_MIN ? trimmedText + '.' : trimmedText;\n\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current.cropper;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputChatPhotoStatic', photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data } }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\nimport { scrollBottom } from '../../../Utils/DOM';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput wrapperRef={this.searchRef} inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let { type, primary } = { type: 'light', primary: { main: '#50A2E9' } };\n        try {\n            const themeOptions = JSON.parse(localStorage.getItem('themeOptions'));\n            type = themeOptions.type;\n            primary = themeOptions.primary;\n        } catch {}\n\n        this.state = {\n            open: false,\n            type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        const type = event.target.value;\n\n        this.setState({ type });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                disableEnforceFocus={true}\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Theme')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='default' control={<Radio color='primary' />} label='System Default' />\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { isMacOS } from '../../../Utils/Common';\nimport { SEND_BY_CTRL_ENTER_KEY } from '../../../Constants';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const sendByCtrlEnterOption = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false,\n            sendByCtrlEnter: Boolean(sendByCtrlEnterOption && sendByCtrlEnterOption.value)\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    async handleSetOption(command) {\n        let value = false;\n        switch (command) {\n            case 'sendByCtrlEnter': {\n                value = true;\n                break;\n            }\n            case 'sendByEnter': {\n                value = false;\n                break;\n            }\n        }\n\n        await TdLibController.send({\n            '@type': 'setOption',\n            name: SEND_BY_CTRL_ENTER_KEY,\n            value: { '@type': 'optionValueBoolean', value }\n        });\n\n        this.setState({\n            sendByCtrlEnter: value\n        });\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground, sendByCtrlEnter } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Theme')} />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('Keyboard')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={!sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('SendByEnter')}\n                                secondary={t('NewLineByShiftEnter')}\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleSetOption('sendByCtrlEnter')}>\n                            <Radio\n                                color='primary'\n                                className='settings-item-control'\n                                checked={sendByCtrlEnter}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={isMacOS() ? t('SendByCommandEnter') : t('SendByControlEnter')}\n                                secondary={t('NewLineByEnter')}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions, t } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport { unblockSender } from '../../../Actions/Message';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile || defaultPhoto) {\n            const photo = defaultPhotoFile\n                ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputChatPhotoStatic', photo }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\nimport { scrollBottom } from '../../Utils/DOM';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        scrollBottom(wrapPanel, 'auto');\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                scrollBottom(wrapPanel, 'smooth');\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile || defaultPhoto) {\n                const photo = defaultPhotoFile\n                     ? { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                     : { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto };\n\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputChatPhotoStatic', photo }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache && cache.chats ? cache.chats : null;\n        const archiveCacheItems = cache && cache.archiveChats ? cache.archiveChats : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        {/*<UpdatePanel />*/}\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\nimport { PHOTO_SIZE, SEND_BY_CTRL_ENTER_KEY, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n    };\n\n    onClientUpdateSendText = update => {\n        const { text } = update;\n\n        if (!text) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = text;\n        focusInput(element);\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const { chatSelectOptions } = AppStore;\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\n            return;\n        }\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                const sendByCtrlEnter = OptionStore.get(SEND_BY_CTRL_ENTER_KEY);\n                if (sendByCtrlEnter && sendByCtrlEnter.value) {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && !ctrlKey && !metaKey && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter+cmd, enter+ctrl\n                    else if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                } else {\n                    // enter+cmd, enter+ctrl, enter+shift\n                    if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                        document.execCommand('insertLineBreak');\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                    // enter\n                    else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                        this.handleSubmit(false);\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n\n        // const { text, position } = this.getTextAndCaretPosition();\n        // this.searchUsernameOrHashtag(text, position, [], false);\n    };\n\n    getTextAndCaretPosition = () => {\n        const { current: input } = this.newMessageRef;\n        if (!input) return;\n\n        input.focus()\n        let _range = document.getSelection().getRangeAt(0);\n        let range = _range.cloneRange();\n        range.selectNodeContents(input);\n        range.setEnd(_range.endContainer, _range.endOffset);\n\n        return { text: input.innerText, position: range.toString().length };\n    };\n\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\n        const { chatId } = this.state;\n\n        const searchResultUsernames = [];\n\n        if (this.cancelDelayRunnable) {\n            clearTimeout(this.cancelDelayRunnable);\n            this.cancelDelayRunnable = null;\n        }\n\n        const info = getChatFullInfo(chatId);\n        const needUsernames = true;\n        const needBotContext = true;\n\n        const now = Date.now();\n        this.now = now;\n\n        let searchPosition = position;\n        if (text.length > 0) {\n            searchPosition--;\n        }\n\n        this.lastText = text;\n        this.lastUsernameOnly = usernameOnly;\n\n        let foundType = -1;\n        let result = '';\n        let resultStartPosition;\n        let resultLength;\n\n        let dogPosition = -1;\n        if (usernameOnly) {\n            result += text.substring(1);\n            resultStartPosition = 0;\n            resultLength = result.length;\n            foundType = 0;\n        } else {\n            for (let i = searchPosition; i >= 0; i--) {\n                if (i >= text.length){\n                    continue;\n                }\n                let ch = text[i];\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\n                    if (ch === '@') {\n                        if (needUsernames || needBotContext && i === 0){\n                            if (!info && i !== 0) {\n                                this.lastText = text;\n                                this.lastPosition = position;\n                                this.messages = messages;\n                                this.closeHints(now);\n                                return;\n                            }\n                            dogPosition = i;\n                            foundType = 0;\n                            resultStartPosition = i;\n                            resultLength = result.length + 1;\n                        }\n                    }\n                }\n\n                result = ch + result;\n            }\n        }\n\n        if (foundType === -1) {\n            this.closeHints(now);\n            return;\n        }\n\n        if (foundType === 0) {\n            const users = [];\n            const usersMap = new Map();\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\n                const { sender } = messages[i];\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\n                    usersMap.set(sender.user_id, sender.user_id);\n                    users.push(sender.user_id);\n                }\n            }\n\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\n            const hasSpace = usernameString.indexOf(' ') >= 0;\n            const newResult = [];\n            const newResultsMap = new Map();\n            const newMap = new Map();\n\n            const inlineBots = [];\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\n\n            }\n\n            const chat = ChatStore.get(chatId);\n            if (chat && info && info.members) {\n                for (let i = -1; i < info.members.length; i++) {\n                    let username;\n                    let firstName;\n                    let lastName;\n                    let object;\n                    let id;\n                    if (i === -1) {\n                        if (!usernameString.length) {\n                            newResult.push(chat);\n                            continue;\n                        }\n                        firstName = chat.title;\n                        lastName = '';\n                        username = chat.username;\n                        object = chat;\n                        id = -chat.id;\n                    } else {\n                        const { user_id } = info.members[i];\n                        const user = UserStore.get(user_id);\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\n                            continue;\n                        }\n                        if (!usernameString.length) {\n                            if (!isDeletedUser(user_id)) {\n                                newResult.push(user);\n                                continue;\n                            }\n                        }\n                        firstName = user.first_name;\n                        lastName = user.last_name;\n                        username = user.username;\n                        object = user;\n                        id = user.id;\n                    }\n\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\n                        newResult.push(object);\n                        newMap.set(id, object);\n                    }\n                }\n            }\n\n            if (isSupergroup(chatId) && usernameString.length > 0) {\n                if (newResult.length < 5) {\n                    this.cancelDelayRunnable = setTimeout(() => {\n                        this.cancelDelayRunnable = null;\n                        this.showUsersResult(now, newResult, newMap, true);\n                    }, 0);\n                } else {\n                    this.showUsersResult(now, newResult, newMap, true);\n                }\n\n                setTimeout(async () => {\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const result = await TdLibController.send({\n                        '@type': 'searchChatMembers',\n                        chat_id: chatId,\n                        query: usernameString,\n                        limit: 20,\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\n                    });\n\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const { members } = result;\n                    if (members.length > 0) {\n                        for (let i = 0; i < members.length; i++) {\n                            const { user_id } = members[i];\n                            if (isMeUser(user_id)) {\n                                continue;\n                            }\n                            const user = UserStore.get(user_id);\n                            if (!user) {\n                                continue;\n                            }\n\n                            searchResultUsernames.push(user);\n                        }\n\n                        this.notifyDataSetChanged(now, searchResultUsernames);\n                    }\n\n\n                }, 200);\n            } else {\n                this.showUsersResult(now, newResult, newMap, true);\n            }\n        }\n    }\n\n    notifyDataSetChanged(id, searchResultUsernames) {\n        console.log('[search] global', searchResultUsernames);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsGlobal',\n            id,\n            global: searchResultUsernames\n        });\n    }\n\n    showUsersResult(id, newResult, newMap, notify) {\n        console.log('[search] local', newResult);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsLocal',\n            id,\n            local: newResult\n        });\n    }\n\n    closeHints(id) {\n        console.log('[search] close');\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsClose',\n            id\n        });\n    }\n\n    openHints() {\n\n    }\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const { is_blocked, last_message } = chat;\n\n                return {\n                    prevChatId: chatId,\n\n                    isBlocked: is_blocked,\n                    hasLastMessage: Boolean(last_message)\n                };\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId, options } = this.props;\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.options !== options) {\n            return true;\n        }\n\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.hasLastMessage !== hasLastMessage) {\n            return true;\n        }\n\n        if (nextState.isBlocked !== isBlocked) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        this.setState({\n            clearHistory: update.inProgress\n        });\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chat_id, last_message } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            hasLastMessage: Boolean(last_message)\n        });\n    };\n\n    onUpdateChatIsBlocked = update => {\n        const { chat_id, is_blocked } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            isBlocked: is_blocked\n        });\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    handleUnblock = () => {\n        const { chatId } = this.props;\n\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\n    };\n\n    handleStartBot = async () => {\n        const { chatId, options } = this.props;\n\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n        if (options && options.botStartMessage) {\n            const { botUserId, parameter } = options.botStartMessage;\n\n            await sendBotStartMessage(chatId, botUserId, parameter);\n        } else {\n            await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: 0,\n                input_message_content: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: '/start',\n                        entities: []\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: true\n                }\n            });\n        }\n    };\n\n    render() {\n        const { chatId, options, t } = this.props;\n        const { hasLastMessage, clearHistory } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type, is_blocked } = chat;\n        if (!type) return null;\n\n        if (is_blocked) {\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\n        }\n\n        if (options && options.botStartMessage) {\n            const isBot = isBotChat(chatId);\n            if (isBot) {\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n            }\n        }\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypeSecret':\n            case 'chatTypePrivate': {\n                const isBot = isBotChat(chatId);\n                if (isBot && (!hasLastMessage || clearHistory)) {\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n                }\n\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,2A3,3 0 0,1 15,5V11A3,3 0 0,1 12,14A3,3 0 0,1 9,11V5A3,3 0 0,1 12,2M19,11C19,14.53 16.39,17.44 13,17.93V21H11V17.93C7.61,17.44 5,14.53 5,11H7A5,5 0 0,0 12,16A5,5 0 0,0 17,11H19Z' />,\n    'Mic'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,11C19,12.19 18.66,13.3 18.1,14.28L16.87,13.05C17.14,12.43 17.3,11.74 17.3,11H19M15,11.16L9,5.18V5A3,3 0 0,1 12,2A3,3 0 0,1 15,5V11L15,11.16M4.27,3L21,19.73L19.73,21L15.54,16.81C14.77,17.27 13.91,17.58 13,17.72V21H11V17.72C7.72,17.23 5,14.41 5,11H6.7C6.7,14 9.24,16.1 12,16.1C12.81,16.1 13.6,15.91 14.31,15.58L12.65,13.92L12,14A3,3 0 0,1 9,11V10.28L3,4.27L4.27,3Z' />,\n    'MicOff'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const MAX_SPEED = 8.2;\nexport const MIN_SPEED = 0.8;\nexport const AMPLITUDE_SPEED = 0.33;\n\nexport const SCALE_BIG = 0.807;\nexport const SCALE_SMALL = 0.704;\n\nexport const SCALE_BIG_MIN = 0.878;\nexport const SCALE_SMALL_MIN = 0.926;\n\nexport const FORM_BIG_MAX = 0.6;\nexport const FORM_SMALL_MAX = 0.6;\n\nexport const GLOBAL_SCALE = 1;\n\nexport const FORM_BUTTON_MAX = 0;\n\nexport const GRADIENT_SPEED_MIN = 0.5;\nexport const GRADIENT_SPEED_MAX = 0.01;\n\nexport const LIGHT_GRADIENT_SIZE = 0.5;\n\nfunction rotateZ(x, y, angle, originX, originY) {\n    x -= originX;\n    y -= originY;\n\n    let X = x * Math.cos(angle) - y * Math.sin(angle);\n    let Y = y * Math.cos(angle) + x * Math.sin(angle);\n\n    x = X + originX;\n    y = Y + originY;\n\n    return [x, y];\n}\n\nexport default class BlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.cubicBezierK = 1.0;\n        this.N = n;\n        this.L = (4.0 / 3.0) * Math.tan(Math.PI / (2 * this.N));\n        this.radius = new Array(n);\n        this.angle = new Array(n);\n\n        this.radiusNext = new Array(n);\n        this.angleNext = new Array(n);\n        this.progress = new Array(n);\n        this.speed = new Array(n);\n\n        this.pointStart = new Array(4);\n        this.pointEnd = new Array(4);\n\n        for (let i = 0; i < this.N; i++) {\n            this.generateBlob(this.radius, this.angle, i);\n            this.generateBlob(this.radiusNext, this.angleNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, angle, i) {\n        const { maxRadius, minRadius, speed, N } = this;\n\n        const angleDif = 2 * Math.PI / N * 0.05;\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        angle[i] = 2 * Math.PI / N * i + Math.random() * angleDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext, angle, angleNext } = this;\n        for (let i = 0; i < N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                angle[i] = angleNext[i];\n                this.generateBlob(radiusNext, angleNext, i);\n            }\n        }\n    }\n\n    draw(cX, cY, canvas, paint) {\n        // console.log('[bd] draw', cX, cY, canvas, paint);\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n\n            const { radius, radiusNext, angle, angleNext, N, L, cubicBezierK, pointStart, pointEnd } = this;\n\n            for (let i = 0; i < N; i++) {\n                const progress = this.progress[i];\n                const nextIndex = i + 1 < N ? i + 1 : 0;\n                const progressNext = this.progress[nextIndex];\n                const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                const r2 = radius[nextIndex] * (1.0 - progressNext) + radiusNext[nextIndex] * progressNext;\n                const angle1 = angle[i] * (1.0 - progress) + angleNext[i] * progress;\n                const angle2 = angle[nextIndex] * (1.0 - progressNext) + angleNext[nextIndex] * progressNext;\n                const l = L * (Math.min(r1, r2) + (Math.max(r1, r2) - Math.min(r1, r2)) / 2) * cubicBezierK;\n\n                pointStart[0] = cX;\n                pointStart[1] = cY - r1;\n                pointStart[2] = cX + l;\n                pointStart[3] = cY - r1;\n\n                this.mapPoints(pointStart, cX, cY, angle1);\n\n                pointEnd[0] = cX;\n                pointEnd[1] = cY - r2;\n                pointEnd[2] = cX - l;\n                pointEnd[3] = cY - r2;\n\n                this.mapPoints(pointEnd, cX, cY, angle2);\n\n                if (i === 0) {\n                    // console.log('[bd] moveTo', pointStart[0], pointStart[1]);\n                    ctx.moveTo(pointStart[0], pointStart[1]);\n                }\n                // console.log('[bd] bezierCurveTo', pointEnd[0], pointEnd[1]);\n                ctx.bezierCurveTo(\n                    pointStart[2], pointStart[3],\n                    pointEnd[2], pointEnd[3],\n                    pointEnd[0], pointEnd[1]\n                );\n            }\n\n            // ctx.scale(1.0, 1.0);\n            // this.fillStyleFunc(ctx);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n\n    mapPoints(points, cX, cY, angle) {\n        const result1 = rotateZ(points[0], points[1], angle, cX, cY);\n        const result2 = rotateZ(points[2], points[3], angle, cX, cY);\n\n        points[0] = result1[0];\n        points[1] = result1[1];\n        points[2] = result2[0];\n        points[3] = result2[1];\n    }\n\n    generateInitBlob() {\n        const { radius, radiusNext, angle, angleNext, progress, N } = this;\n\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, angle, i);\n            this.generateBlob(radiusNext, angleNext, i);\n            progress[i] = 0;\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// const MIN_SPEED = 0.8;\n// const MAX_SPEED = 8.2;\n\nimport { MIN_SPEED, MAX_SPEED } from './BlobDrawable';\n\nexport default class LineBlobDrawable {\n    constructor(n) {\n        this.maxRadius = 10;\n        this.minRadius = 0;\n\n        this.N = n;\n        this.radius = new Array(n + 1);\n\n        this.radiusNext = new Array(n + 1);\n        this.progress = new Array(n + 1);\n        this.speed = new Array(n + 1);\n\n        for (let i = 0; i <= n; i++) {\n            this.generateBlob(this.radius, i);\n            this.generateBlob(this.radiusNext, i);\n            this.progress[i] = 0;\n        }\n    }\n\n    generateBlob(radius, i) {\n        const { maxRadius, minRadius, speed } = this;\n\n        const radDif = maxRadius - minRadius;\n        radius[i] = minRadius + Math.random() * radDif;\n        speed[i] = 0.017 + 0.003 * Math.random();\n    }\n\n    generateNextBlob() {\n        const { radius, radiusNext, progress, N } = this;\n        for (let i = 0; i < N; i++) {\n            this.generateBlob(radius, i);\n            this.generateBlob(radiusNext, i);\n            progress[i] = 0.0;\n        }\n    }\n\n    update(amplitude, speedScale) {\n        const { N, progress, speed, radius, radiusNext } = this;\n        for (let i = 0; i <= N; i++) {\n            progress[i] += (speed[i] * MIN_SPEED) + amplitude * speed[i] * MAX_SPEED * speedScale;\n            if (progress[i] >= 1.0) {\n                progress[i] = 0.0;\n                radius[i] = radiusNext[i];\n                this.generateBlob(radiusNext, i);\n            }\n        }\n    }\n\n    draw(left, top, right, bottom, canvas, paint, pinnedTop, progressToPinned) {\n        if (canvas.getContext) {\n            const ctx = canvas.getContext('2d');\n            // ctx.globalAlpha = 0.5;\n            // ctx.lineWidth = 1;\n\n            ctx.beginPath();\n            ctx.moveTo(right, bottom);\n            ctx.lineTo(left, bottom);\n\n            const { radius, radiusNext, N } = this;\n            for (let i = 0; i <= N; i++) {\n                if (i === 0) {\n                    const progress = this.progress[i];\n                    const r1 = radius[i] * (1.0 - progress) + radiusNext[i] * progress;\n                    const y = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.lineTo(left, y);\n                } else {\n                    const progress = this.progress[i - 1];\n                    const r1 = radius[i - 1] * (1.0 - progress) + radiusNext[i - 1] * progress;\n                    const progressNext = this.progress[i];\n                    const r2 = radius[i] * (1.0 - progressNext) + radiusNext[i] * progressNext;\n                    const x1 = (right - left) / N * (i - 1);\n                    const x2 = (right - left) / N * i;\n                    const cx = x1 + (x2 - x1) / 2;\n\n                    const y1 = (top - r1) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    const y2 = (top - r2) * progressToPinned + pinnedTop * (1.0 - progressToPinned);\n                    ctx.bezierCurveTo(\n                        cx, y1,\n                        cx, y2,\n                        x2, y2\n                    );\n                    if (i === N) {\n                        ctx.lineTo(right, bottom);\n                    }\n                }\n            }\n\n            // ctx.scale(1.0, 1.0);\n            paint(ctx);\n            ctx.fill();\n            ctx.closePath();\n        }\n    }\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LineBlobDrawable from './LineBlobDrawable';\n\nexport const MUTE_BUTTON_STATE_UNMUTE = 0;\nexport const MUTE_BUTTON_STATE_MUTE = 1;\nexport const MUTE_BUTTON_STATE_CONNECTING = 2;\nexport const MUTE_BUTTON_STATE_MUTED_BY_ADMIN = 3;\n\nexport class WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, x0, y0, x1, y1) {\n        const gradient = ctx.createLinearGradient(x0, y0, x1, y1);\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.6, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            gradient.addColorStop(0, '#00B1C0');\n            gradient.addColorStop(1, '#52CE5D');\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            gradient.addColorStop(0, '#2BCEFF');\n            gradient.addColorStop(1, '#0976E3');\n        } else {\n            gradient.addColorStop(0, '#8599aa');\n            gradient.addColorStop(1, '#8599aa');\n        }\n\n        return gradient;\n    }\n\n    update(height, width, dt, amplitude) {\n        // TODO: move gradient here\n    }\n}\n\nclass TopBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.resizing = false;\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n        this.amplitude2 = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.prevState = null;\n        this.currentState = this.states[MUTE_BUTTON_STATE_CONNECTING];\n        this.progressToState = 1.0;\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.right = 1260 * this.scale;\n        this.bottom = 63 * this.scale;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        window.addEventListener('resize', this.handleResize);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n        const topBar = document.getElementById('top-bar');\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n\n        this.canvas = document.getElementById('canvas');\n        this.lbd = new LineBlobDrawable(3);\n        this.lbd1 = new LineBlobDrawable(7);\n        this.lbd2 = new LineBlobDrawable(8);\n        this.setAmplitude(this.amplitude);\n\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        window.removeEventListener('resize', this.handleResize);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 20 * this.scale;\n        this.bottom = 63 * this.scale;\n\n        const topBar = document.getElementById('top-bar');\n        if (!topBar) return;\n\n        this.right = topBar.offsetWidth * this.scale;\n        this.forceUpdate();\n    }\n\n    handleResize = () => {\n        if (this.resizeHandler) {\n            clearTimeout(this.resizeHandler);\n            this.resizeHandler = null;\n        }\n\n        this.resizing = true;\n        this.resizeCanvas();\n        this.resizeHandler = setTimeout(() => {\n            this.resizing = false;\n            this.invokeDraw();\n        }, 250);\n    }\n\n    resizeCanvas() {\n        const topBar = document.getElementById('top-bar');\n\n        this.scale = window.devicePixelRatio;\n        this.right = topBar.offsetWidth * this.scale;\n\n        this.forceUpdate();\n        this.invokeDraw();\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        const { lbd, lbd1, lbd2, scale, left, top, right, bottom, currentState, previousState, focused, resizing } = this;\n        if (!focused && !resizing && this.progressToState >= 1.0) {\n            return;\n        }\n\n        // console.log('[top] draw', [focused, resizing, this.mounted]);\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        // console.log('draw start', this.amplitude, this.animateToAmplitude);\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude += this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (this.animateToAmplitude !== this.amplitude2) {\n            this.amplitude2 += this.animateAmplitudeDiff2 * dt;\n            if (this.animateAmplitudeDiff2 > 0) {\n                if (this.amplitude2 > this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude2 < this.animateToAmplitude) {\n                    this.amplitude2 = this.animateToAmplitude;\n                }\n            }\n        }\n\n        if (previousState) {\n            this.progressToState += dt / 250;\n            if (this.progressToState > 1) {\n                this.progressToState = 1;\n                this.previousState = null;\n            }\n        }\n\n        const top1 = 6 * this.amplitude2 * scale;\n        const top2 = 6 * this.amplitude2 * scale;\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n        lbd.minRadius = 0;\n        lbd.maxRadius = (2 + 2 * this.amplitude) * scale;\n        lbd1.minRadius = 0;\n        lbd1.maxRadius = (3 + 9 * this.amplitude) * scale;\n        lbd2.minRadius = 0;\n        lbd2.maxRadius = (3 + 9 * this.amplitude) * scale;\n\n        lbd.update(this.amplitude, 0.3);\n        lbd1.update(this.amplitude, 0.7);\n        lbd2.update(this.amplitude, 0.7);\n\n        for (let i = 0; i < 2; i++) {\n            if (i === 0 && !previousState) {\n                continue;\n            }\n\n            let alpha = 1;\n            let state = null;\n            if (i === 0) {\n                alpha = 1 - this.progressToState;\n                state = previousState;\n                // previousState.setToPaint(paint);\n            } else {\n                alpha = previousState ? this.progressToState : 1;\n                currentState.update(bottom - top, right - left, dt, this.amplitude);\n                state = currentState;\n                // currentState.setToPaint(paint);\n            }\n\n            const paint1 = ctx => {\n                ctx.globalAlpha = 0.3 * alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n            const paint = ctx => {\n                ctx.globalAlpha = i === 0? 1 : alpha;\n                state.shader(ctx, left, top, right, bottom);\n            };\n\n            lbd1.draw(left, top - top1, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd2.draw(left, top - top2, right, bottom, this.canvas, paint1,  top, 1.0);\n            lbd.draw(left, top, right, bottom, this.canvas, paint, top, 1.0);\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / 250;\n        this.animateAmplitudeDiff2 = (value - this.amplitude) / 120;\n    }\n\n    render() {\n        const { left, right, top, bottom, scale } = this;\n\n        return(\n            <div id='top-bar' className='top-bar'>\n                <canvas id='canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n            </div>\n        );\n    }\n}\n\nTopBar.propTypes = {};\n\nexport default TopBar;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport TopBar, { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { openGroupCallPanel } from '../../Actions/Call';\nimport { showSnackbar } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallTopPanel.css';\n\nclass GroupCallTopPanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.topBarRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { call, status, connected, animated } = this.state;\n\n        if (nextState.call !== call) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.connected !== connected) {\n            return true;\n        }\n\n        if (nextState.animated !== animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n        this.topBarRef.current && this.topBarRef.current.setCurrentState(stateId, animated);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes, type } = update;\n        if (!amplitudes.length) return;\n\n        let max = 0;\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            max = value > max ? value : max;\n        }\n\n        if (type !== 'input') {\n            this.topBarRef.current && this.topBarRef.current.setAmplitude(max);\n        }\n    };\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id } = participant;\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status\n        }, () => {\n            this.switchButtonState(true);\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.saveMessagesScrollPosition();\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.restoreMessagesScrollPosition(Boolean(call));\n            this.switchButtonState(true);\n        });\n    };\n\n    saveMessagesScrollPosition() {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const prevOffsetHeight = list.offsetHeight;\n            const prevScrollTop = list.scrollTop;\n\n            list.prevOffsetHeight = prevOffsetHeight;\n            list.prevScrollTop = prevScrollTop;\n        });\n    }\n\n    restoreMessagesScrollPosition(openPanel = true) {\n        const elements = document.getElementsByClassName('messages-list-wrapper');\n        if (!elements.length) return;\n\n        [...elements].forEach(x => {\n            const list = x;\n            if (!list) return;\n\n            const { prevScrollTop, prevOffsetHeight } = list;\n            if (list.scrollTop === prevScrollTop) {\n                const offsetHeightDiff = Math.abs(prevOffsetHeight - list.offsetHeight);\n                list.scrollTop += openPanel ? offsetHeightDiff : - offsetHeightDiff;\n            }\n        });\n    }\n\n    handleMicrophone = async event => {\n        event.stopPropagation();\n\n        const { call, status } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            showSnackbar(LStore.getString('VoipMutedByAdminInfo'), closeSnackbar => snackKey => {\n                return (\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => { closeSnackbar(snackKey); }}>\n                        <CloseIcon />\n                    </IconButton>\n                )\n            });\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenGroupCall = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        openGroupCallPanel();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { call, status, connected, animated } = this.state;\n        if (!call) return null;\n\n        const { chatId } = call;\n        const title = connected ? getChatTitle(chatId).toUpperCase() : t('Connecting');\n\n        return (\n            <div className='group-call-top-panel-wrapper'>\n                { animated ? (\n                    <TopBar ref={this.topBarRef}/>\n                    ) : (\n                    <div className={classNames('group-call-top-panel',\n                        {\n                            'group-call-top-panel-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-top-panel-unmuted': connected && status === 'unmuted',\n                            'group-call-top-panel-connecting': !connected,\n\n                        })}\n                    />\n                )}\n                <div className='group-call-top-panel-buttons' onClick={this.handleOpenGroupCall}>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleMicrophone}>\n                        {status === 'unmuted' ? <MicIcon fontSize='small'/> : <MicOffIcon fontSize='small' />}\n                    </IconButton>\n                    <div className='group-call-top-panel-title'>\n                        {title}\n                    </div>\n                    <IconButton className='header-player-button' style={{ color: 'white' }} onClick={this.handleLeave}>\n                        <CallEndIcon fontSize='small' />\n                    </IconButton>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nGroupCallTopPanel.propTypes = {};\n\nexport default withTranslation()(GroupCallTopPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12 2C17.5 2 22 6.5 22 12S17.5 22 12 22 2 17.5 2 12 6.5 2 12 2M12 4C10.1 4 8.4 4.6 7.1 5.7L18.3 16.9C19.3 15.5 20 13.8 20 12C20 7.6 16.4 4 12 4M16.9 18.3L5.7 7.1C4.6 8.4 4 10.1 4 12C4 16.4 7.6 20 12 20C13.9 20 15.6 19.4 16.9 18.3Z' />,\n    'Block'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6.62,10.79C8.06,13.62 10.38,15.94 13.21,17.38L15.41,15.18C15.69,14.9 16.08,14.82 16.43,14.93C17.55,15.3 18.75,15.5 20,15.5A1,1 0 0,1 21,16.5V20A1,1 0 0,1 20,21A17,17 0 0,1 3,4A1,1 0 0,1 4,3H7.5A1,1 0 0,1 8.5,4C8.5,5.25 8.7,6.45 9.07,7.57C9.18,7.92 9.1,8.31 8.82,8.59L6.62,10.79Z' />,\n    'Phone'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BlockIcon from '../../Assets/Icons/Block';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport ReportOutlinedIcon from '@material-ui/icons/ReportOutlined';\nimport PhoneIcon from '../../Assets/Icons/Phone';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport {\n    canClearHistory,\n    canDeleteChat,\n    getViewInfoTitle,\n    isPrivateChat,\n    getDeleteChatTitle,\n    hasOnePinnedMessage,\n    canSwitchBlocked,\n    getChatSender,\n    canManageVoiceChats,\n    canBeReported, getChatUserId, canBeCalled\n} from '../../Utils/Chat';\nimport { clearHistory, leaveChat, openReportChat } from '../../Actions/Chat';\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\nimport { requestUnpinMessage, showAlert } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null\n        };\n    }\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    handleSwitchBlocked = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const sender = getChatSender(chatId);\n        const { is_blocked } = chat;\n        if (is_blocked) {\n            unblockSender(sender);\n        } else {\n            requestBlockSender(sender);\n        }\n    };\n\n    handleStartGroupCall = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        showAlert({\n            title: LStore.getString('StartVoipChatTitle'),\n            message: LStore.getString('StartVoipChatAlertText'),\n            ok: LStore.getString('Start'),\n            cancel: LStore.getString('Cancel'),\n            onResult: async result => {\n                if (result){\n                    await CallStore.startGroupCall(chatId);\n                }\n            }\n        })\n    };\n\n    handleStartP2PCall = () => {\n        this.handleMenuClose();\n\n        const userId = getChatUserId(AppStore.getChatId());\n        CallStore.p2pStartCall(userId, false);\n    };\n\n    handleReport = () => {\n        this.handleMenuClose();\n\n        const { chatId } = this.props;\n\n        openReportChat(chatId, []);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_blocked, voice_chat_group_call_id } = chat;\n\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n        const switchBlocked = canSwitchBlocked(chatId);\n        const manageVoiceChats = canManageVoiceChats(chatId);\n        const reported = canBeReported(chatId);\n        const called = canBeCalled(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    { CallStore.p2pCallsEnabled && called && (\n                        <MenuItem onClick={this.handleStartP2PCall}>\n                            <ListItemIcon>\n                                <PhoneIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Call')} />\n                        </MenuItem>\n                    )}\n                    { !Boolean(voice_chat_group_call_id) && manageVoiceChats && (\n                        <MenuItem onClick={this.handleStartGroupCall}>\n                            <ListItemIcon>\n                                <PhoneIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('StartVoipChat')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                    {switchBlocked && (\n                        <MenuItem onClick={this.handleSwitchBlocked}>\n                            <ListItemIcon>\n                                <BlockIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\n                        </MenuItem>\n                    )}\n                    {reported && (\n                        <MenuItem onClick={this.handleReport}>\n                            <ListItemIcon>\n                                <ReportOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ReportChat')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown, animateOnMount } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown, animateOnMount);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown, animate = true) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = !animate ? '0ms' : '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height, getItemTemplate } = this.props;\n        const { from, to } = this.state;\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{getItemTemplate(to)}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? getItemTemplate(to) : getItemTemplate(from) }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? getItemTemplate(from) : getItemTemplate(to) }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    getItemTemplate: PropTypes.func,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number,\n    animateOnMount: PropTypes.bool\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    getItemTemplate: x => x,\n    scrollDown: true,\n    height: 21,\n    animateOnMount: true\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport { canBeReported } from '../../Utils/Chat';\nimport { openReportChat } from '../../Actions/Chat';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        forwardMessages(id, messageIds);\n    };\n\n    handleReport = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        clearSelection();\n        openReportChat(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const items = Array.from(MessageStore.selectedItems.values());\n        const canReport = canBeReported(items.length > 0 ? items[0].chatId : 0);\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canReport && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleReport}>\n                        {t('ReportChat')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.state = {\n            chatId,\n            pinned,\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState()\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    setPinnedState() {\n        const { chatId } = this.state;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({ pinned });\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        const chatId = AppStore.getChatId();\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        this.setState({\n            chatId,\n            pinned\n        });\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const { chatId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handlePinClick = () => {\n        const { chatId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            pinned,\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <div className='header-right-buttons'>\n                                { pinned.length > 1 && (\n                                    <IconButton\n                                        aria-label='Pins'\n                                        onClick={this.handlePinClick}\n                                        onMouseDown={this.handleMouseDown}>\n                                        <PlaylistEditIcon />\n                                    </IconButton>\n                                )}\n                                <IconButton\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\nimport { requestBlockSender } from '../../Actions/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarInviteMembers': {\n                break;\n            }\n        }\n        if (!content) {\n            return null;\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        const hasItems =\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\n        if (!hasItems) {\n            return null;\n        }\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                {/*{messageId}*/}\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallStore from '../../Stores/CallStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport './GroupCallJoinPanelSubtitle.css';\n\nclass GroupCallJoinPanelSubtitle extends React.Component {\n    state = {\n        participantCount: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participantCount } = this.state;\n\n        if (nextState.participantCount !== participantCount) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            let participantCount = 0;\n            const groupCall = CallStore.get(groupCallId);\n            if (groupCall) {\n                const { participant_count } = groupCall;\n                participantCount = participant_count;\n            }\n\n            return {\n                prevGroupCallId: groupCallId,\n                participantCount\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { groupCallId } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== groupCallId) return;\n\n        let participantCount = 0;\n        const groupCall = CallStore.get(groupCallId);\n        if (groupCall) {\n            const { participant_count } = groupCall;\n            participantCount = participant_count;\n        }\n\n        this.setState({ participantCount });\n    };\n\n    render() {\n        const { t, participantsOnly } = this.props;\n        const { participantCount } = this.state;\n        // console.log('[call][GroupCallPanelSubtitle] render');\n\n        return (\n            <div className='group-call-join-panel-subtitle'>\n                {participantCount === 0 && !participantsOnly? t('MembersTalkingNobody') : LStore.formatPluralString('Participants', participantCount)}\n            </div>\n        );\n    }\n\n}\n\nGroupCallJoinPanelSubtitle.propTypes = {\n    groupCallId: PropTypes.number,\n    participantsOnly: PropTypes.bool\n};\n\nGroupCallJoinPanelSubtitle.defaultProps = {\n    participantsOnly: false\n}\n\nexport default withTranslation()(GroupCallJoinPanelSubtitle);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from '../Tile/UserTile';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallRecentParticipants.css';\n\nfunction speakersEquals(lhs, rhs) {\n    if (lhs.length !== rhs.length) return false;\n\n    for (let i = 0; i < lhs.length; i++) {\n        if (lhs[i].user_id !== rhs[i].user_id) return false;\n        if (lhs[i].is_speaking !== rhs[i].is_speaking) return false;\n    }\n\n    return true;\n}\n\nclass GroupCallRecentParticipants extends React.Component {\n    state = {\n        speakers: []\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { speakers } = this.state;\n\n        if (!speakersEquals(nextState.speakers, speakers)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { id } = props;\n        const { prevId } = state;\n\n        if (prevId !== id) {\n            let speakers = [];\n            const groupCall = CallStore.get(id);\n            if (groupCall) {\n                const { recent_speakers } = groupCall;\n                speakers = recent_speakers;\n            }\n\n            return {\n                prevId: id,\n                speakers\n            };\n        }\n\n        return null;\n    }\n\n    loadContent(speakers) {\n        const store = FileStore.getStore();\n        loadUsersContent(store, speakers.map(x => x.user_id));\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.speakers);\n\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onUpdateGroupCall = update => {\n        const { id } = this.props;\n        const { group_call } = update;\n\n        if (group_call && group_call.id !== id) return;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        clearTimeout(this.timeout);\n        if (!speakers.length) {\n            this.setState({ speakers: [] });\n        } else {\n            this.loadContent(speakers);\n\n            this.timeout = setTimeout(() => {\n                this.updateSpeakers();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        }\n    };\n\n    updateSpeakers() {\n        const { id } = this.props;\n\n        let speakers = [];\n        const groupCall = CallStore.get(id);\n        if (groupCall) {\n            const { recent_speakers } = groupCall;\n            speakers = recent_speakers;\n        }\n\n        this.setState({ speakers });\n    }\n\n    render() {\n        const { speakers } = this.state;\n        if (!speakers) return null;\n        if (!speakers.length) return null;\n\n        return (\n            <div className='group-call-recent-participants'>\n                {[...speakers].reverse().map(x => <UserTile key={x.user_id} userId={x.user_id} small speaking={x.is_speaking}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallRecentParticipants.propTypes = {\n    id: PropTypes.number\n};\n\nexport default GroupCallRecentParticipants;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport GroupCallJoinPanelSubtitle from './GroupCallJoinPanelSubtitle';\nimport GroupCallRecentParticipants from './GroupCallRecentParticipants';\nimport CallStore from '../../Stores/CallStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './GroupCallJoinPanel.css';\n\nclass GroupCallJoinPanel extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n\n            let groupCallId = 0;\n            if (chat) {\n                const { voice_chat_group_call_id } = chat;\n                groupCallId = voice_chat_group_call_id;\n            }\n\n            const { currentGroupCall } = CallStore;\n            const isCurrent = Boolean(currentGroupCall && currentGroupCall.chatId === chatId);\n\n            return {\n                prevChatId: chatId,\n                groupCallId,\n                isCurrent\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { isCurrent, groupCallId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.groupCallId !== groupCallId) {\n            return true;\n        }\n\n        if (nextState.isCurrent !== isCurrent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.on('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.on('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCall', this.handleClientUpdateGroupCall);\n        CallStore.off('updateGroupCall', this.handleUpdateGroupCall);\n        ChatStore.off('updateChatVoiceChat', this.handleUpdateChatVoiceChat);\n    }\n\n    handleUpdateChatVoiceChat = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if ( chatId !== chat_id) return;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n\n        this.setState({\n            groupCallId: voice_chat_group_call_id\n        });\n    }\n\n    handleUpdateGroupCall = update => {\n        const { group_call } = update;\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { voice_chat_group_call_id } = chat;\n        if (group_call && group_call.id !== voice_chat_group_call_id) return;\n\n        this.setState({\n            groupCallId: group_call ? group_call.id : 0\n        });\n    };\n\n    handleClientUpdateGroupCall = update => {\n        const { chatId } = this.props;\n\n        const { currentGroupCall } = CallStore;\n        const isCurrent = currentGroupCall && currentGroupCall.chatId === chatId;\n\n        this.setState({ isCurrent });\n    };\n\n    handleJoin = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { voice_chat_group_call_id } = chat;\n        const groupCall = CallStore.get(voice_chat_group_call_id);\n        console.log('[call] handleJoin', groupCall);\n        if (groupCall && groupCall.is_joined) return;\n\n        const muted = true;\n        await CallStore.joinGroupCall(chatId, voice_chat_group_call_id, muted);\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const { groupCallId, isCurrent } = this.state;\n        if (!groupCallId) return null;\n        if (isCurrent) return null;\n\n        return (\n            <div className='group-call-join-panel' onClick={this.handleJoin}>\n                <div className='group-call-join-panel-content'>\n                    <div className='group-call-join-panel-title'>{t('VoipGroupVoiceChat')}</div>\n                    <GroupCallJoinPanelSubtitle groupCallId={groupCallId}/>\n                </div>\n                <GroupCallRecentParticipants id={groupCallId}/>\n                <Button className='group-call-join-panel-button' variant='contained' color='primary' disableElevation>\n                    {t('VoipChatJoin')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nGroupCallJoinPanel.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallJoinPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst MessageContext = React.createContext({\n    chatId: 0,\n    messageId: 0\n});\n\nexport default MessageContext;\n\nexport function withMessage(Component) {\n    class MessageComponent extends React.Component {\n        render() {\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\n        }\n    }\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\n\n    return MessageComponent;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport User from '../Tile/User';\nimport ChatStore from '../../Stores/ChatStore';\nimport './InputBoxHints.css'\n\nclass InputBoxHints extends React.Component {\n    state = {\n        local: [],\n        global: [],\n        id: null\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { local, global, id } = this.state;\n\n        if (nextState.local !== local) {\n            return true;\n        }\n\n        if (nextState.global !== global) {\n            return true;\n        }\n\n        if (nextState.id !== id) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    onClientUpdateHintsClose = update => {\n        this.setState({\n            id: null,\n            local: [],\n            global: []\n        });\n    };\n\n    onClientUpdateHintsGlobal = update => {\n        const { id, global } = update;\n        if (this.state.id !== id) return;\n\n        this.setState({\n            id,\n            global\n        });\n    };\n\n    onClientUpdateHintsLocal = update => {\n        const { id, local } = update;\n\n        this.setState({\n            id,\n            local,\n            global: []\n        });\n    };\n\n    render() {\n        const { local, global } = this.state;\n\n        const results = (local || []).concat(global || []);\n\n        // console.log('[hints] render', local, global, results);\n        if (!results.length) return null;\n\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n            </div>\n        );\n    }\n\n}\n\nInputBoxHints.propTypes = {};\n\nexport default InputBoxHints;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\n    'ArrowTopRight'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\n    'ShareFilled'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withMessage } from '../MessageContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PendingIcon from '../../../Assets/Icons/Pending';\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\nimport { getUserFullName } from '../../../Utils/User';\nimport { getChatTitle } from '../../../Utils/Chat';\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\nimport { openChatSelect } from '../../../Actions/Message';\nimport LStore from '../../../Stores/LocalizationStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './KeyboardButton.css';\n\nclass KeyboardButton extends React.Component {\n    state = {\n        loading: false\n    }\n\n    handleCallbackQueryAnswer = (type, result, message) => {\n        const { chatId } = this.props;\n        const { sender, content, via_bot_user_id } = message;\n        const { text, show_alert, url } = result;\n        const { game } = content;\n\n        let title = '';\n        if (message) {\n            if (via_bot_user_id) {\n                title = getUserFullName(via_bot_user_id, null);\n            } else {\n                title = getChatTitle(chatId, false);\n            }\n        }\n        title = title || LStore.getString('Bot');\n\n        if (text) {\n            if (show_alert) {\n                showAlert({\n                    title,\n                    message: text,\n                    ok: LStore.getString('OK')\n                });\n            } else {\n                showSnackbar(text, closeSnackbar => snackKey => {\n                    return (\n                        <IconButton\n                            key='close'\n                            aria-label='Close'\n                            color='inherit'\n                            className='notification-close-button'\n                            onClick={() => { closeSnackbar(snackKey); }}>\n                            <CloseIcon />\n                        </IconButton>\n                    )\n                });\n            }\n        } else if (url) {\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                const userId = via_bot_user_id ? via_bot_user_id : sender.user_id;\n                const user = UserStore.get(userId);\n\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\n            } else {\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\n            }\n        }\n    };\n\n    handleClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, type } = this.props;\n\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                showAlert({\n                    title: LStore.getString('AppName'),\n                    message: LStore.getString('PaymentsNotSupported'),\n                    ok: LStore.getString('OK')\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                /// gamee, querty_bot\n\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, content, via_bot_user_id } = message;\n                if (!content) break;\n\n                let payload = null;\n                let game = null;\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                    game = content.game;\n                    if (!game) break;\n\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\n                } else {\n                    payload = { '@type': 'callbackQueryPayloadData', data };\n                }\n\n                this.setState({ loading: true });\n                const result = await TdLibController.send({\n                    '@type': 'getCallbackQueryAnswer',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    payload\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                this.handleCallbackQueryAnswer(type, result, message);\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                /// BotFather + transfer bot\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                this.setState({ loading: true });\n                const passwordState = await TdLibController.send({\n                    '@type': 'getPasswordState'\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                const { has_password } = passwordState;\n                if (!has_password) break;\n\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\n                    console.log('[pwd] onPassword', password);\n                    this.setState({ loading: true });\n                    let error = null;\n                    const result = await TdLibController.send({\n                        '@type': 'getCallbackQueryAnswer',\n                        chat_id: chatId,\n                        message_id: messageId,\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\n                    }).catch(e => {\n                        error = e;\n                    }).finally(() => {\n                        this.setState({ loading: false });\n                    });\n\n                    if (error) {\n                        console.log('[pwd] onPassword error', error);\n                        onError && onError(error);\n                    } else if (result) {\n                        console.log('[pwd] onPassword result', result);\n                        onCloseDialog && onCloseDialog();\n                        this.handleCallbackQueryAnswer(type, result, message);\n                    }\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                const { url, id, forward_text } = type;\n\n                this.setState({ loading: true });\n                let hasError = false;\n                const result = await TdLibController.send({\n                    '@type': 'getLoginUrlInfo',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    button_id: id\n                }).catch(e => {\n                    hasError = true;\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                if (hasError) {\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                } else {\n                    switch (result['@type']) {\n                        case 'loginUrlInfoOpen': {\n                            const { url, skip_confirm } = result;\n\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\n                            break;\n                        }\n                        case 'loginUrlInfoRequestConfirmation': {\n                            const { url } = result;\n\n\n                            console.log('[login] result', result);\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                /// youtube\n                const { in_current_chat, query } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, via_bot_user_id } = message;\n                let userId = sender.user_id;\n                if (via_bot_user_id !== 0) {\n                    userId = via_bot_user_id;\n                }\n\n                const user = UserStore.get(userId);\n                if (!user) break;\n\n                const inline = `@${user.username} ${query}`;\n\n                if (in_current_chat){\n                    setText(inline);\n                } else {\n                    openChatSelect({ switchInline: inline });\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                /// qwerty_bot\n                const { url } = type;\n\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                break;\n            }\n        }\n    };\n\n    getIcon(type) {\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                const { in_current_chat } = type;\n\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n        }\n    }\n\n    render() {\n        const { text, type } = this.props;\n        const { loading } = this.state;\n\n        const icon = this.getIcon(type);\n\n        return (\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\n                {text}\n                {icon}\n                {loading && (\n                    <PendingIcon\n                        className='keyboard-button-progress'\n                        viewBox='0 0 14 14'\n                    />\n                )}\n            </ListItem>\n        );\n    }\n\n}\n\nKeyboardButton.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    text: PropTypes.string,\n    type: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default withMessage(KeyboardButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardButton from './KeyboardButton';\nimport './KeyboardRow.css';\n\nclass KeyboardRow extends React.Component {\n    render() {\n        const { row } = this.props;\n        if (!row) return null;\n        if (!row.length) return null;\n\n        return (\n            <div className='keyboard-row'>\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\n            </div>\n        );\n    }\n}\n\nKeyboardRow.propTypes = {\n    row: PropTypes.array\n};\n\nexport default KeyboardRow;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardRow from './KeyboardRow';\nimport MessageContext from '../MessageContext';\nimport './ReplyMarkup.css';\n\nclass ReplyMarkup extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId, prevMessageId } = state;\n        const { chatId, messageId } = props;\n\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                message: {\n                    chatId,\n                    messageId\n                }\n            }\n        }\n\n        return null;\n    }\n\n    render() {\n        const { markup } = this.props;\n        const { message } = this.state;\n\n        if (!markup) return null;\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\n\n        const { rows } = markup;\n        if (!rows.length) return null;\n\n        return (\n            <div className='reply-markup'>\n                <MessageContext.Provider value={message}>\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\n                </MessageContext.Provider>\n            </div>\n        );\n    }\n}\n\nReplyMarkup.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    markup: PropTypes.object\n};\n\nexport default ReplyMarkup;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\n            let totalLength = 0;\n            if (site_name) {\n                totalLength += site_name.length;\n            }\n            if (title) {\n                totalLength += title.length;\n            }\n            if (description) {\n                totalLength += description.text.length;\n            }\n\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport ReplyMarkup from './Markup/ReplyMarkup';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle,\n    isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageContent = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageEdited = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    handleUpdateMessageContentAndEditedOnce = () => {\n        const { updateMessageContent, updateMessageEdited } = this;\n        this.updateMessageContent = null;\n        this.updateMessageEdited = null;\n\n        if (!updateMessageContent && !updateMessageEdited) return;\n\n        const { chatId, messageId } = this.props;\n\n        let handled = false;\n        if (updateMessageContent) {\n            const { emojiMatches } = this.state;\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\n            if (newEmojiMatches !== emojiMatches) {\n                handled = true;\n                this.setState({ emojiMatches: newEmojiMatches });\n            }\n        }\n\n        if (handled) return;\n\n        startMessageEditing(chatId, messageId);\n        this.forceUpdate(() => {\n            stopMessageEditing(chatId, messageId);\n        });\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender, reply_markup } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded =\n            !hasCaption  && (\n                content['@type'] === 'messageAnimation' ||\n                content['@type'] === 'messageVideo' ||\n                content['@type'] === 'messagePhoto' ||\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div>\n                                <div\n                                    className={classNames('message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                    style={style}>\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                        <div className='message-title'>\n                                            {showTitle && !showForward && (\n                                                <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\n                                            )}\n                                            {showForward && <Forward forwardInfo={forward_info} />}\n                                        </div>\n                                    )}\n                                    {showReply && (\n                                        <Reply\n                                            chatId={chatId}\n                                            messageId={reply_to_message_id}\n                                            onClick={this.handleReplyClick}\n                                        />\n                                    )}\n                                    {media}\n                                    <div\n                                        className={classNames('message-text', {\n                                            'message-text-1emoji': emojiMatches === 1,\n                                            'message-text-2emoji': emojiMatches === 2,\n                                            'message-text-3emoji': emojiMatches === 3\n                                        })}>\n                                        {text}\n                                    </div>\n                                    {webPage && (\n                                        <WebPage\n                                            chatId={chatId}\n                                            messageId={messageId}\n                                            openMedia={this.openMedia}\n                                            meta={inlineMeta}\n                                        />\n                                    )}\n                                    {withBubble && meta}\n                                </div>\n                                {reply_markup && (\n                                    <ReplyMarkup\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        markup={reply_markup}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\nimport MessageMenu from './MessageMenu';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false,\n            contextMenu: false,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted, contextMenu } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted, contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={null}\n                    source={'chat'}\n                />\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport GroupCallJoinPanel from '../Calls/GroupCallJoinPanel';\nimport InputBoxHints from './InputBoxHints';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { sendBotStartMessage } from '../../Actions/Message';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateStartMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { history } = this.state;\n        if (!history.length) return;\n\n        const { current: list } = this.listRef;\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\n            return;\n        }\n\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\n\n        this.scrollBottomAfterEditing = {\n            chatId,\n            messageId\n        };\n    };\n\n    onClientUpdateStopMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { scrollBottomAfterEditing } = this;\n        if (!scrollBottomAfterEditing) return;\n\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\n\n        const { current: list } = this.listRef;\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\n        this.scrollBottomAfterEditing = null;\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        const { prevScrollTop, prevOffsetHeight } = this;\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop -= Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId, ignoreUnread = false) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (!ignoreUnread && unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n                if (this.props.options) {\n                    const { botStartMessage } = this.props.options;\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\n                        const { botUserId, parameter } = botStartMessage;\n\n                        await sendBotStartMessage(chatId, botUserId, parameter);\n                    }\n                }\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\n        if (hasLastMessage) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, 0, messageId, true);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender, prevMessage.sender) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <div className='messages-list-top-panel'>\n                    <GroupCallJoinPanel chatId={chatId}/>\n                    <ActionBar chatId={chatId} />\n                </div>\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n                {/*<InputBoxHints />*/}\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    options: PropTypes.object,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { closeChatSelect } from '../../Actions/Message';\nimport './SelectChatPlaceholder.css';\n\nclass SelectChatPlaceholder extends React.Component {\n\n    handleClick = () => {\n        closeChatSelect();\n    }\n\n    render() {\n        const { t } = this.props;\n\n        return (\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\n            </div>\n        );\n    }\n\n}\n\nSelectChatPlaceholder.propTypes = {};\n\nexport default withTranslation()(SelectChatPlaceholder);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport GroupCallTopPanel from '../Calls/GroupCallTopPanel';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null,\n            chatSelectOptions: null,\n            chatOpenOptions: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\n            return true;\n        }\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.off('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateClearOpenChatOptions = update => {\n        this.setState({\n            chatOpenOptions: null\n        });\n    }\n\n    onClientUpdateChatSelect = update => {\n        const { options } = update;\n\n        this.setState({\n            chatSelectOptions: options\n        });\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatSelectOptions } = this.state;\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\n\n        this.setState({\n            chatId,\n            messageId,\n            chatOpenOptions,\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <GroupCallTopPanel/>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\n                </div>\n                {chatSelectOptions && <SelectChatPlaceholder/>}\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\nimport AppStore from '../../Stores/ApplicationStore';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        messageIds.sort();\n\n        this.targetChats.forEach(async targetChatId => {\n            if (inputMessageContent) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport BlobDrawable, {\n    AMPLITUDE_SPEED,\n    FORM_BIG_MAX,\n    FORM_SMALL_MAX, LIGHT_GRADIENT_SIZE,\n    SCALE_BIG,\n    SCALE_BIG_MIN,\n    SCALE_SMALL,\n    SCALE_SMALL_MIN\n} from './BlobDrawable';\nimport {\n    MUTE_BUTTON_STATE_CONNECTING,\n    MUTE_BUTTON_STATE_MUTE,\n    MUTE_BUTTON_STATE_MUTED_BY_ADMIN,\n    MUTE_BUTTON_STATE_UNMUTE\n} from './TopBar';\nimport { stopPropagation } from '../../Utils/Message';\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/OvershootInterpolator.java\nclass OvershootInterpolator {\n    constructor(tension) {\n        this.mTension = tension;\n    }\n\n    getInterpolation(t) {\n        // _o(t) = t * t * ((tension + 1) * t + tension)\n        // o(t) = _o(t - 1) + 1\n        t -= 1.0;\n        return t * t * ((this.mTension + 1) * t + this.mTension) + 1.0;\n    }\n}\n\n// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/DecelerateInterpolator.java\nclass DecelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n    }\n\n    getInterpolation(input) {\n        let result;\n        if (this.mFactor === 1.0) {\n            result = 1.0 - (1.0 - input) * (1.0 - input);\n        } else {\n            result = 1.0 - Math.pow((1.0 - input), 2 * this.mFactor);\n        }\n        return result;\n    }\n}\n\n/// https://github.com/aosp-mirror/platform_frameworks_base/blob/master/core/java/android/view/animation/AccelerateInterpolator.java\nclass AccelerateInterpolator {\n    constructor(factor) {\n        this.mFactor = factor || 1.0;\n        this.mDoubleFactor = 2 * this.mFactor;\n    }\n\n    getInterpolation(input) {\n        if (this.mFactor === 1.0) {\n            return input * input;\n        }\n\n        return Math.pow(input, this.mDoubleFactor);\n    }\n}\n\nclass WeavingState {\n    constructor(stateId) {\n        this.stateId = stateId;\n        this.shader = (ctx, left, top, right, bottom) => { };\n        this.createGradient(stateId);\n    }\n\n    createGradient(stateId) {\n        this.shader = (ctx, left, top, right, bottom) => {\n            ctx.fillStyle = WeavingState.getGradientFromType(ctx, stateId, left, top, right, bottom);\n        };\n    }\n\n    update(top, left, size, dt) {\n        // TODO: move gradient here\n    }\n\n    // Android colors\n    static getGradientFromType(ctx, type, left, top, right, bottom) {\n        if (type === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            const gradient = ctx.createLinearGradient(0, 100, 100, 0);\n\n            gradient.addColorStop(0, '#57A4FE');\n            gradient.addColorStop(.3, '#766EE9');\n            gradient.addColorStop(1, '#F05459');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_UNMUTE) {\n            const gradient=ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#77E55C');\n            gradient.addColorStop(1, '#56C7FE');\n\n            return gradient;\n        } else if (type === MUTE_BUTTON_STATE_MUTE) {\n            const gradient = ctx.createRadialGradient(0,50,0,0,50,200);\n\n            gradient.addColorStop(0, '#66D4FB');\n            gradient.addColorStop(1, '#539EF8');\n\n            return gradient;\n        } else {\n            const gradient = ctx.createLinearGradient(0, 400, 400, 0);\n\n            gradient.addColorStop(0, '#2B333E');\n            gradient.addColorStop(1, '#2B333E');\n\n            return gradient;\n        }\n    }\n}\n\nclass RadialProgressView {\n    constructor() {\n        this.decelerateInterpolator = new DecelerateInterpolator();\n        this.accelerateInterpolator = new AccelerateInterpolator();\n\n        this.lineCap = 'round';\n        this.lineWidth = 3;\n        this.progressColor = '#1C93E3';\n        this.updateProgressPaint();\n\n        this.lastUpdateTime = 0;\n        this.radOffset = 0;\n        this.currentCircleLength = 0;\n        this.risingCircleLength = false;\n        this.currentProgressTime = 0;\n        this.useSelfAlpha = false;\n        this.drawingCircleLength = 0;\n\n        this.rotationTime = 2000;\n        this.risingTime = 500;\n        this.size = 0;\n\n        this.currentProgress = 0;\n        this.progressAnimationStart = 0;\n        this.progressTime = 0;\n        this.animatedProgress = 0;\n        this.circle = false;\n        this.circleProgress = 0;\n        this.noProgress = true;\n    }\n\n    setUseSelfAlpha = value => {\n        this.useSelfAlpha = value;\n    };\n\n    setAlpha = alpha => {\n        console.log('[rpv] setAlpha', alpha);\n    };\n\n    setNoProgress = value => {\n        this.noProgress = value;\n    };\n\n    setProgress = value => {\n        this.currentProgress = value;\n        if (this.animatedProgress > value) {\n            this.animatedProgress = value;\n        }\n\n        this.progressAnimationStart = this.animatedProgress;\n        this.progressTime = 0;\n    };\n\n    updateAnimation = () => {\n        const newTime = new Date();\n        let dt = newTime - this.lastUpdateTime;\n        if (dt > 17) {\n            dt = 17;\n        }\n        this.lastUpdateTime = newTime;\n\n        this.radOffset += 360 * dt / this.rotationTime;\n        let count = Math.trunc(this.radOffset / 360);\n        this.radOffset -= count * 360;\n\n        if (this.circle && this.circleProgress !== 1.0) {\n            this.circleProgress += 16 / 220;\n            if (this.circleProgress > 1.0) {\n                this.circleProgress = 1.0;\n            }\n        } else if (!this.circle && this.circleProgress !== 0.0) {\n            this.circleProgress -= 16 / 400;\n            if (this.circleProgress < 0) {\n                this.circleProgress = 0;\n            }\n        }\n\n        if (this.noProgress) {\n            if (this.circleProgress === 0) {\n                this.currentProgressTime += dt;\n                if (this.currentProgressTime >= this.risingTime) {\n                    this.currentProgressTime = this.risingTime;\n                }\n                if (this.risingCircleLength) {\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                } else {\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                }\n\n                if (this.currentProgressTime === this.risingTime) {\n                    if (this.risingCircleLength) {\n                        this.radOffset += 270;\n                        this.currentCircleLength = -266;\n                    }\n\n                    this.risingCircleLength = !this.risingCircleLength;\n                    this.currentProgressTime = 0;\n                }\n            } else {\n                if (this.risingCircleLength) {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 + 266 * this.accelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime);\n                    this.currentCircleLength += 360 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                } else {\n                    const old = this.currentCircleLength;\n                    this.currentCircleLength = 4 - 270 * (1.0 - this.decelerateInterpolator.getInterpolation(this.currentProgressTime / this.risingTime));\n                    this.currentCircleLength -= 364 * this.circleProgress;\n                    const dx = old - this.currentCircleLength;\n                    if (dx > 0) {\n                        this.radOffset += old - this.currentCircleLength;\n                    }\n                }\n            }\n        }\n        else {\n            let progressDiff = this.currentProgress - this.progressAnimationStart;\n            if (progressDiff > 0) {\n                progressDiff += dt;\n                if (this.progressTime >= 200) {\n                    this.animatedProgress = this.progressAnimationStart = this.currentProgress;\n                    this.progressTime = 0;\n                } else {\n                    this.animatedProgress = this.progressAnimationStart + progressDiff * this.decelerateInterpolator.getInterpolation(this.progressTime / 200);\n                }\n            }\n            this.currentCircleLength = Math.max(4, 360 * this.animatedProgress);\n        }\n    };\n\n    setSize = size => {\n        this.size = size;\n    };\n\n    setStrokeWidth = value => {\n        this.lineWidth = value;\n        this.updateProgressPaint();\n    };\n\n    setProgressColor = color => {\n        this.progressColor = color;\n        this.updateProgressPaint();\n    };\n\n    updateProgressPaint() {\n        this.progressPaint = ctx => {\n            if (this.lineCap) {\n                ctx.lineCap = this.lineCap;\n            }\n            if (this.lineWidth) {\n                ctx.lineWidth = this.lineWidth;\n            }\n            if (this.progressColor) {\n                ctx.strokeStyle = this.progressColor;\n            }\n        };\n    }\n\n    toCircle = (toCircle, animated) => {\n        this.circle = toCircle;\n        if (!animated) {\n            this.circleProgress = this.circle ? 1.0 : 0.0;\n        }\n    }\n\n    draw = (canvas, cx, cy, scale = 1) => {\n        this.circleRect = { x0: cx - this.size / 2, y0: cy - this.size / 2, x1: cx + this.size / 2, y1: cy + this.size / 2 };\n        const ctx = canvas.getContext('2d');\n        if (ctx) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(cx, cy);\n            ctx.scale(scale, scale);\n            ctx.beginPath();\n            if (!this.risingCircleLength) {\n                if ((this.radOffset + this.currentCircleLength) > this.radOffset) {\n                    this.currentCircleLength = 0;\n                }\n            }\n\n            const radStart = this.radOffset * Math.PI / 180;\n            this.drawingCircleLength = this.currentCircleLength;\n            const radLength = this.drawingCircleLength * Math.PI / 180;\n\n\n            ctx.arc(0, 0, this.size / 2, radStart, radStart + radLength, !this.risingCircleLength);\n            this.progressPaint(ctx);\n            ctx.stroke();\n            ctx.restore();\n\n            this.updateAnimation();\n        }\n    }\n\n    isCircle = () => {\n        return Math.abs(this.drawingCircleLength) >= 360;\n    }\n}\n\nclass Button extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.focused = true;\n        this.radialPaint = ctx => { };\n        this.paint = ctx => { };\n        this.paintTmp = ctx => { };\n        this.lastUpdateTime = new Date();\n        this.amplitude = 0.0;\n\n        this.states = [\n            new WeavingState(MUTE_BUTTON_STATE_UNMUTE),\n            new WeavingState(MUTE_BUTTON_STATE_MUTE),\n            new WeavingState(MUTE_BUTTON_STATE_CONNECTING),\n            new WeavingState(MUTE_BUTTON_STATE_MUTED_BY_ADMIN),\n        ];\n        this.switchProgress = 1.0;\n        this.muteButtonState = MUTE_BUTTON_STATE_MUTE;\n        this.prevState = null;\n        this.currentState = this.states[this.muteButtonState];\n        this.progressToState = 1.0;\n\n        this.showLightingProgress = 1.0;\n        this.showWavesProgress = 1.0;\n        this.overshootInterpolator = new OvershootInterpolator(1.5);\n        this.colorsTmp = new Array(3);\n\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n\n        this.buttonDefaultRadius = 57;\n        this.buttonRadius = 52;\n        this.strokeWidth = 4;\n        this.invalidateColors = true;\n        this.radialProgressView = new RadialProgressView();\n        this.radialProgressView.setSize(this.buttonRadius * 2 - this.strokeWidth);\n        this.radialProgressView.setStrokeWidth(this.strokeWidth);\n        this.radialProgressView.setProgressColor('#28BAFF');\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        window.addEventListener('blur', this.handleBlur);\n        window.addEventListener('focus', this.handleFocus);\n        this.media = window.matchMedia('screen and (min-resolution: 2dppx)');\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n\n\n        this.canvas = document.getElementById('button-canvas');\n        this.tinyWaveDrawable = new BlobDrawable(9);\n        this.bigWaveDrawable = new BlobDrawable(12);\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc(72 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.generateInitBlob();\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc(75 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.generateInitBlob();\n\n        const color = '#66D4FB';\n        this.radialGradient = ctx => {\n            const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 160);\n            gradient.addColorStop(0, color + '32');\n            gradient.addColorStop(1, color + '00');\n\n            ctx.fillStyle = gradient;\n        };\n        this.radialPaint = this.radialGradient;\n\n        this.setAmplitude(this.amplitude);\n\n        // console.log('[button] componentDidMount draw');\n        this.draw();\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        window.removeEventListener('blur', this.handleBlur);\n        window.removeEventListener('focus', this.handleFocus);\n        this.media.addEventListener('change', this.handleDevicePixelRatioChanged);\n    }\n\n    handleFocus = () => {\n        this.focused = true;\n        this.invokeDraw();\n    }\n\n    handleBlur = () => {\n        this.focused = false;\n    }\n\n    invokeDraw = () => {\n        if (this.raf) return;\n\n        this.draw();\n    }\n\n    handleDevicePixelRatioChanged = e => {\n        this.scale = window.devicePixelRatio;\n        this.left = 0 * this.scale;\n        this.top = 0 * this.scale;\n        this.right = 380 * this.scale;\n        this.bottom = (220 + 28) * this.scale;\n        this.cx = 190 * this.scale;\n        this.cy = (110 + 28) * this.scale;\n        this.forceUpdate();\n    }\n\n    fillColors(stateId, colorsToSet) {\n        if (stateId === MUTE_BUTTON_STATE_UNMUTE) {\n            colorsToSet[0] = '#66D4FB';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTE) {\n            colorsToSet[0] = '#7DDCAA';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else if (stateId === MUTE_BUTTON_STATE_MUTED_BY_ADMIN) {\n            colorsToSet[0] = '#766EE9';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        } else {\n            colorsToSet[0] = '#1C2229';\n            colorsToSet[1] = '';\n            colorsToSet[2] = '';\n        }\n    }\n\n    strToHex(n) {\n        let s = n.toString(16);\n        if (s.length === 1) {\n            s = '0' + s;\n        }\n        return s;\n    }\n\n    blendARGB(color1, color2, ratio) {\n        if (color1.length <= 7) {\n            color1 += 'FF';\n        }\n        if (color2.length <= 7) {\n            color2 += 'FF';\n        }\n        const c1 = {\n            r: parseInt(color1.substr(1, 2), 16),\n            g: parseInt(color1.substr(3, 2), 16),\n            b: parseInt(color1.substr(5, 2), 16),\n            a: parseInt(color1.substr(7, 2), 16),\n        };\n        const c2 = {\n            r: parseInt(color2.substr(1, 2), 16),\n            g: parseInt(color2.substr(3, 2), 16),\n            b: parseInt(color2.substr(5, 2), 16),\n            a: parseInt(color2.substr(7, 2), 16),\n        };\n\n        const inverseRatio = 1 - ratio;\n        const a = Math.trunc(c1.a * inverseRatio + c2.a * ratio) % 256;\n        const r = Math.trunc(c1.r * inverseRatio + c2.r * ratio) % 256;\n        const g = Math.trunc(c1.g * inverseRatio + c2.g * ratio) % 256;\n        const b = Math.trunc(c1.b * inverseRatio + c2.b * ratio) % 256;\n\n        return `#${this.strToHex(r)}${this.strToHex(g)}${this.strToHex(b)}`;\n    }\n\n    draw = (force = false) => {\n        this.raf = null;\n        if (!this.mounted) {\n            return;\n        }\n        if (!this.focused && this.switchProgress >= 1.0) {\n            return;\n        }\n        // console.log('[button] draw', [this.focused, this.mounted]);\n        const { currentState, prevState, left, top, right, bottom } = this;\n\n        const newTime = new Date();\n        let dt = (newTime - this.lastUpdateTime);\n        if (dt > 20) {\n            dt = 17;\n        }\n\n        this.tinyWaveDrawable.minRadius = Math.trunc(62 / this.buttonDefaultRadius * this.buttonRadius);\n        this.tinyWaveDrawable.maxRadius = Math.trunc((62 + 20 * FORM_SMALL_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        this.bigWaveDrawable.minRadius = Math.trunc(65 / this.buttonDefaultRadius * this.buttonRadius);\n        this.bigWaveDrawable.maxRadius = Math.trunc((65 + 20 * FORM_BIG_MAX) / this.buttonDefaultRadius * this.buttonRadius);\n\n        if (this.animateToAmplitude !== this.amplitude) {\n            this.amplitude = this.amplitude + this.animateAmplitudeDiff * dt;\n            if (this.animateAmplitudeDiff > 0) {\n                if (this.amplitude > this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            } else {\n                if (this.amplitude < this.animateToAmplitude) {\n                    this.amplitude = this.animateToAmplitude;\n                }\n            }\n        }\n\n        let canSwitchProgress = true;\n        if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, true);\n            if (!this.radialProgressView.isCircle()) {\n                canSwitchProgress = false;\n            }\n        } else if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n            this.radialProgressView.toCircle(true, false);\n        }\n\n        if (canSwitchProgress) {\n            if (this.switchProgress !== 1) {\n                if (prevState && prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.switchProgress += dt / 100;\n                } else {\n                    this.switchProgress += dt / 180;\n                }\n\n                if (this.switchProgress >= 1.0) {\n                    this.switchProgress = 1.0;\n                    this.prevState = null;\n                    if (currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        this.radialProgressView.toCircle(false, true);\n                    }\n                }\n                this.invalidateColors = true;\n            }\n\n            if (this.invalidateColors && currentState) {\n                this.invalidateColors = false;\n                let lightingColor;\n                if (prevState) {\n                    this.fillColors(prevState.stateId, this.colorsTmp);\n                    const oldLight = this.colorsTmp[0];\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    const newLight = this.colorsTmp[0];\n                    lightingColor = this.blendARGB(oldLight, newLight, this.switchProgress);\n                } else {\n                    this.fillColors(currentState.stateId, this.colorsTmp);\n                    lightingColor = this.colorsTmp[0];\n                }\n                if (this.currentLightColor !== lightingColor) {\n                    this.radialGradient = ctx => {\n                        const gradient = ctx.createRadialGradient(0, 0, 0, 0, 0, 100);\n\n                        gradient.addColorStop(0, lightingColor + '3C');\n                        gradient.addColorStop(1, lightingColor + '00');\n\n                        ctx.fillStyle = gradient;\n                    };\n                    this.currentLightColor = lightingColor;\n                }\n            }\n\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId !== MUTE_BUTTON_STATE_CONNECTING;\n            }\n\n            if (prevState && currentState && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                this.showWavesProgress -= dt / 180;\n                if (this.showWavesProgress < 0) {\n                    this.showWavesProgress = 0;\n                }\n            } else {\n                if (showWaves && this.showWavesProgress !== 1) {\n                    this.showWavesProgress += dt / 350;\n                    if (this.showWavesProgress > 1) {\n                        this.showWavesProgress = 1;\n                    }\n                } else if (!showWaves && this.showWavesProgress !== 0) {\n                    this.showWavesProgress -= dt / 350;\n                    if (this.showWavesProgress < 0) {\n                        this.showWavesProgress = 0;\n                    }\n                }\n            }\n\n            if (showLighting && this.showLightingProgress !== 1) {\n                this.showLightingProgress += dt / 350;\n                if (this.showLightingProgress > 1) {\n                    this.showLightingProgress = 1;\n                }\n            } else if (!showLighting && this.showLightingProgress !== 0) {\n                this.showLightingProgress -= dt / 350;\n                if (this.showLightingProgress < 0) {\n                    this.showLightingProgress = 0;\n                }\n            }\n        }\n\n        let showWavesProgressInterpolated = this.overshootInterpolator.getInterpolation(this.showWavesProgress);\n        showWavesProgressInterpolated = 0.4 + 0.6 * showWavesProgressInterpolated;\n\n        this.bigWaveDrawable.update(this.amplitude, 1.0);\n        this.tinyWaveDrawable.update(this.amplitude, 1.0);\n\n        const ctx = this.canvas.getContext('2d');\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        ctx.resetTransform();\n\n        const cx = this.cx;\n        const cy = this.cy;\n\n        if (prevState && currentState && (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING || prevState.stateId === MUTE_BUTTON_STATE_CONNECTING)) {\n            let progress;\n            if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                progress = this.switchProgress;\n                this.paint = prevState.shader;\n            } else {\n                progress = 1.0 - this.switchProgress;\n                this.paint = currentState.shader;\n            }\n\n            this.paintTmp = ctx => {\n                ctx.fillStyle = '#2B333E';\n            }\n\n            let paint = ctx => {\n                this.paint(ctx, left, top, right, bottom);\n            };\n\n            ctx.globalAlpha = 1.0;\n            let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n            const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n            this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n\n            ctx.globalAlpha = 0.3;\n            // big wave\n            ctx.save();\n            scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n            ctx.restore();\n\n            // small wave\n            ctx.save();\n            scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n            ctx.translate(cx, cy);\n            ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n            this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n            ctx.restore();\n\n            ctx.globalAlpha = 1.0;\n            if (canSwitchProgress) {\n                this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                paint = ctx => {\n                    ctx.fillStyle = '#28BAFF';\n                };\n                if (progress !== 0) {\n                    ctx.globalAlpha = progress;\n                    this.drawCircle(ctx, cx, cy, this.scale, this.buttonRadius, paint);\n                }\n            }\n            ctx.globalAlpha = 1.0;\n            this.drawCircle(ctx, cx, cy, 1,Math.trunc(this.buttonRadius - 0.5 * this.strokeWidth) * progress * this.scale, this.paintTmp);\n            if  (!canSwitchProgress) {\n                this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n            }\n            ctx.restore();\n        } else {\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                ctx.globalAlpha = 1.0;\n                let scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude * 0.5;\n                if (i === 1) {\n                    const scaleLight = 0.7 + LIGHT_GRADIENT_SIZE;\n                    this.drawCircle(ctx, cx, cy, scaleLight * scale * this.showLightingProgress * this.scale, 160, this.radialGradient);\n                }\n\n                ctx.globalAlpha = 0.3 * alpha;\n                // big wave\n                ctx.save();\n                scale = SCALE_BIG_MIN + SCALE_BIG * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.bigWaveDrawable.draw(0, 0 ,this.canvas, paint);\n                ctx.restore();\n\n                // small wave\n                ctx.save();\n                scale = SCALE_SMALL_MIN + SCALE_SMALL * this.amplitude;\n                ctx.translate(cx, cy);\n                ctx.scale(scale * showWavesProgressInterpolated * this.scale, scale * showWavesProgressInterpolated * this.scale);\n                this.tinyWaveDrawable.draw(0, 0, this.canvas, paint);\n                ctx.restore();\n            }\n\n            // button\n            for (let i = 0; i < 2; i++) {\n                let alpha = 0;\n                let buttonRadius = this.buttonRadius;\n                let paint = null;\n                if (i === 0 && prevState) {\n                    paint = prevState.shader;\n                    alpha = 1 - this.switchProgress;\n                    if (prevState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else if (i === 1) {\n                    paint = currentState.shader;\n                    alpha = this.switchProgress;\n                    if (currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                        buttonRadius -= alpha * 2;\n                    }\n                } else {\n                    continue;\n                }\n\n                if (!paint) {\n                    paint = ctx => {\n                        ctx.fillStyle = '#2B333E';\n                    };\n                }\n\n                if (i === 0) {\n                    ctx.globalAlpha = 1.0;\n                } else {\n                    ctx.globalAlpha = alpha;\n                }\n                this.drawCircle(ctx, cx, cy, this.scale, buttonRadius, paint);\n\n                if (i === 1 && currentState.stateId === MUTE_BUTTON_STATE_CONNECTING) {\n                    this.radialProgressView.draw(this.canvas, cx, cy, this.scale);\n                }\n            }\n        }\n\n        if (!force) {\n            this.raf = requestAnimationFrame(() => this.draw());\n        }\n    };\n\n    drawCircle(ctx, cx, cy, scale, radius, paint) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.translate(cx, cy);\n        ctx.scale(scale, scale);\n        ctx.arc(0, 0, radius, 0, 2 * Math.PI, false);\n        ctx.closePath();\n        paint && paint(ctx);\n        ctx.fill();\n        ctx.restore();\n    }\n\n    setCurrentState = (stateId, animated) => {\n        const { currentState, states } = this;\n\n        if (currentState && currentState.id === stateId) {\n            return;\n        }\n\n        this.previousState = animated ? currentState : null;\n        this.currentState = states[stateId];\n        this.progressToState = this.previousState ? 0.0 : 1.0;\n    };\n\n    updateMuteButton = (stateId, animated) => {\n        const { muteButtonState } = this;\n        if (muteButtonState === stateId && animated) {\n            return;\n        }\n\n        // TODO: add text animation\n\n        if (animated) {\n            this.muteButtonState = stateId;\n        } else {\n            this.muteButtonState = stateId;\n        }\n        this.updateMuteButtonState(animated);\n    }\n\n    updateMuteButtonState (animated) {\n        const { states, currentState, muteButtonState } = this;\n\n        if (states[muteButtonState] !== currentState) {\n            this.prevState = currentState;\n            this.currentState = states[muteButtonState];\n            if (!this.prevState || !animated) {\n                this.switchProgress = 1.0;\n                this.prevState = null;\n            } else {\n                this.switchProgress = 0.0;\n            }\n        }\n\n        if (!animated) {\n            let showWaves = false;\n            let showLighting = false;\n            if (currentState) {\n                showWaves = currentState.stateId === MUTE_BUTTON_STATE_MUTE || currentState.stateId === MUTE_BUTTON_STATE_UNMUTE;\n                showLighting = currentState.stateId === MUTE_BUTTON_STATE_CONNECTING;\n            }\n            this.showWavesProgress = showWaves ? 1.0 : 0.0;\n            this.showLightingProgress = showLighting ? 1.0 : 0.0;\n        }\n    }\n\n    setAmplitude(value) {\n        this.animateToAmplitude = value;\n        this.animateAmplitudeDiff = (value - this.amplitude) / (100 + 500 * AMPLITUDE_SPEED);\n        // console.log('[button] setAmplitude', [this.amplitude, this.animateToAmplitude, this.animateAmplitudeDiff]);\n    }\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    }\n\n    render() {\n        const { children, onClick } = this.props;\n        const { left, right, top, bottom, scale } = this;\n\n        return (\n            <div id='button' className='button' style={{ height: bottom / scale, borderRadius: 12, position: 'relative', transform: 'translateY(-14px)' }}>\n                <canvas id='button-canvas' width={right} height={bottom} style={{ width: right / scale, height: bottom / scale }}/>\n                <div style={{\n                    position: 'absolute',\n                    background: 'transparent',\n                    width: 104,\n                    height: 104,\n                    borderRadius: '50%',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    left: '50%',\n                    top: '50%',\n                    marginLeft: -52,\n                    marginTop: -38,\n                    cursor: 'pointer'\n                }}\n                     onMouseDown={stopPropagation}\n                     onClick={onClick}>\n                    {children}\n                </div>\n            </div>\n        );\n    }\n\n}\n\nButton.propTypes = {};\n\nexport default Button;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport AnimatedItem from '../ColumnMiddle/AnimatedItem';\nimport './GroupCallMicButtonHint.css';\n\nclass GroupCallMicButtonHint extends React.Component {\n\n    getItemTemplate = item => {\n        const { t } = this.props;\n\n        let title = '';\n        let subtitle = '';\n        switch (item) {\n            case 'muted': {\n                title = t('VoipGroupUnmute');\n                subtitle = t('VoipHoldAndTalk');\n                break;\n            }\n            case 'unmuted': {\n                title = t('VoipTapToMute');\n                break;\n            }\n            case 'forceMuted': {\n                title = t('VoipMutedByAdmin');\n                subtitle = t('VoipMutedByAdminInfo');\n                break;\n            }\n            case 'connecting': {\n                title = t('Connecting');\n                break;\n            }\n        }\n\n        return (\n            <div className='group-call-mic-button-hint-item'>\n                <div className='group-call-mic-button-hint-title'>{title}</div>\n                {subtitle && <div className='group-call-mic-button-hint-subtitle'>{subtitle}</div>}\n            </div>\n        );\n    }\n\n    render() {\n        const { className, status } = this.props;\n\n        return (\n            <div className={classNames('group-call-mic-button-hint', className)}>\n                <AnimatedItem item={status} height={37} getItemTemplate={this.getItemTemplate} scrollDown={true} animateOnMount={false}/>\n            </div>\n        );\n    }\n}\n\nGroupCallMicButtonHint.propTypes = {\n    status: PropTypes.string\n};\n\nexport default withTranslation()(GroupCallMicButtonHint);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from './Button';\nimport GroupCallMicButtonHint from './GroupCallMicButtonHint';\nimport MicIcon from '../../Assets/Icons/Mic';\nimport MicOffIcon from '../../Assets/Icons/MicOff';\nimport { getCallStatus } from '../../Calls/Utils';\nimport { MUTE_BUTTON_STATE_CONNECTING, MUTE_BUTTON_STATE_MUTE, MUTE_BUTTON_STATE_MUTED_BY_ADMIN, MUTE_BUTTON_STATE_UNMUTE } from './TopBar';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallMicButton.css';\n\nclass GroupCallMicButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.buttonRef = React.createRef();\n\n        const { currentGroupCall: call } = CallStore;\n        const { connected, status } = getCallStatus(call);\n        this.state = {\n            call,\n            status,\n            connected,\n            animated: CallStore.animated\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { status, connected, animated, shook } = this.state;\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        if (connected !== nextState.connected) {\n            return true;\n        }\n\n        if (shook !== nextState.shook) {\n            return true;\n        }\n\n        if (status !== nextState.status) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.switchButtonState(false);\n\n        CallStore.on('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.on('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.on('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.on('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallAmplitude', this.onClientUpdateGroupCallAmplitudeChange);\n        CallStore.off('clientUpdateGroupCall', this.onClientUpdateGroupCall);\n        CallStore.off('clientUpdateGroupCallConnectionState', this.onClientUpdateGroupCallConnectionState);\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n        CallStore.off('updateGroupCall', this.onUpdateGroupCall);\n    }\n\n    onClientUpdateGroupCallAmplitudeChange = update => {\n        const { amplitudes } = update;\n        if (!amplitudes.length) return;\n\n        for (let i = 0; i < amplitudes.length; i++) {\n            const { type, value } = amplitudes[i];\n            if (type === 'input') {\n                this.buttonRef.current && this.buttonRef.current.setAmplitude(value);\n                return;\n            }\n        }\n    };\n\n    switchButtonState(animated = true) {\n        const { connected, status } = this.state;\n\n        let stateId = MUTE_BUTTON_STATE_MUTE;\n        if (!connected) {\n            stateId = MUTE_BUTTON_STATE_CONNECTING;\n        } else {\n            if (status === 'forceMuted') {\n                stateId = MUTE_BUTTON_STATE_MUTED_BY_ADMIN;\n            } else if (status === 'unmuted') {\n                stateId = MUTE_BUTTON_STATE_UNMUTE;\n            } else if (status === 'muted') {\n                stateId = MUTE_BUTTON_STATE_MUTE;\n            }\n        }\n\n\n        this.buttonRef.current && this.buttonRef.current.updateMuteButton(stateId, true);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call_id !== call.groupCallId) return;\n\n        const { user_id, is_muted } = participant\n        if (user_id !== UserStore.getMyId()) return;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    }\n\n    onUpdateGroupCall = update => {\n        const { group_call } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (group_call.id !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCallConnectionState = update => {\n        const { groupCallId } = update;\n        const { call } = this.state;\n        if (!call) return;\n\n        if (groupCallId !== call.groupCallId) return;\n\n        this.onClientUpdateGroupCall(update);\n    };\n\n    onClientUpdateGroupCall = update => {\n        const { currentGroupCall: call } = CallStore;\n\n        const { connected, status } = getCallStatus(call);\n        this.setState({\n            call,\n            status,\n            connected\n        }, () => {\n            this.switchButtonState();\n        });\n    };\n\n    handleClick = () => {\n        const { call } = this.state;\n        if (!call) return;\n\n        const { chatId, groupCallId, stream } = call;\n\n        const groupCall = CallStore.get(groupCallId);\n        if (!groupCall) return;\n\n        if (!groupCall.can_unmute_self) {\n            const { shook } = this.state;\n            if (shook) {\n                this.setState({\n                    shook: false\n                }, () => {\n                    requestAnimationFrame(() => {\n                        this.setState({ shook: true });\n                    })\n                });\n            } else {\n                this.setState({\n                    shook: true\n                });\n            }\n        } else {\n            CallStore.changeUserMuted(UserStore.getMyId(), !CallStore.isMuted());\n        }\n    };\n\n    render() {\n        const { status, connected, animated, shook } = this.state;\n        // console.log('[call][GroupCallMicButton] render');\n\n        return (\n            <div className='group-call-mic-button-wrapper' >\n                {animated ? (\n                    <Button ref={this.buttonRef} onClick={this.handleClick}>\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </Button>\n                ) : (\n                    <div className={classNames('group-call-mic-button',\n                        {\n                            'group-call-muted-by-admin ': connected && status === 'forceMuted',\n                            'group-call-unmuted': connected && status === 'unmuted',\n                            'group-call-connecting': !connected,\n                        })}\n                         onClick={this.handleClick}\n                    >\n                        {connected && status === 'unmuted' ? <MicIcon style={{ fontSize: 36 }}/> : <MicOffIcon style={{ fontSize: 36 }}/>}\n                    </div>\n                )}\n                <GroupCallMicButtonHint className={shook ? 'shook-horizontal' : ''} status={connected ? status : 'connecting'}/>\n            </div>\n        )\n    }\n}\n\nGroupCallMicButton.propTypes = {\n    groupCallId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(GroupCallMicButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />,\n    'AddMember'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm-1-9c0-.55.45-1 1-1s1 .45 1 1v6c0 .55-.45 1-1 1s-1-.45-1-1V5zm6 6c0 2.76-2.24 5-5 5s-5-2.24-5-5H5c0 3.53 2.61 6.43 6 6.92V21h2v-3.08c3.39-.49 6-3.39 6-6.92h-2z\" />,\n    'MicOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M10.8 4.9c0-.66.54-1.2 1.2-1.2s1.2.54 1.2 1.2l-.01 3.91L15 10.6V5c0-1.66-1.34-3-3-3-1.54 0-2.79 1.16-2.96 2.65l1.76 1.76V4.9zM19 11h-1.7c0 .58-.1 1.13-.27 1.64l1.27 1.27c.44-.88.7-1.87.7-2.91zM4.41 2.86L3 4.27l6 6V11c0 1.66 1.34 3 3 3 .23 0 .44-.03.65-.08l1.66 1.66c-.71.33-1.5.52-2.31.52-2.76 0-5.3-2.1-5.3-5.1H5c0 3.41 2.72 6.23 6 6.72V21h2v-3.28c.91-.13 1.77-.45 2.55-.9l4.2 4.2 1.41-1.41L4.41 2.86z\" />,\n    'MicOffOutlined'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport MicIcon from '../../Assets/Icons/MicOutlined';\nimport MicOffIcon from '../../Assets/Icons/MicOffOutlined';\nimport UserTile from '../Tile/UserTile';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getUserFullName } from '../../Utils/User';\nimport { openUser } from '../../Actions/Client';\nimport CallStore from '../../Stores/CallStore';\nimport UserStore from '../../Stores/UserStore';\nimport './GroupCallParticipant.css';\n\nclass GroupCallParticipant extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        participant: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, groupCallId } = props;\n        const { prevUserId, prevGroupCallId } = state;\n\n        if (prevUserId !== userId || prevGroupCallId !== groupCallId) {\n            const participants = CallStore.participants.get(groupCallId) || new Map();\n            const participant = participants.get(userId);\n\n            return {\n                prevUserId: userId,\n                prevGroupCallId: groupCallId,\n                participant\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participant, left, top, contextMenu } = this.state;\n\n        if (participant !== nextState.participant) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId, userId } = this.props;\n        const { group_call_id, participant } = update;\n        if (groupCallId !== group_call_id) return;\n        if (!participant) return;\n\n        const { user_id } = participant;\n        if (userId !== user_id) return;\n\n        this.setState({\n            participant\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { userId } = this.props;\n        if (userId === UserStore.getMyId()) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleOpenProfile = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, true);\n        closeGroupCallPanel();\n    };\n\n    handleSendMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n\n        openUser(userId, false);\n        closeGroupCallPanel();\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, true);\n    };\n\n    handleUnmute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { userId } = this.props;\n        CallStore.changeUserMuted(userId, false);\n    };\n\n    render() {\n        const { userId, t } = this.props;\n        const { contextMenu, left, top, participant } = this.state;\n        // console.log('[call][GroupCallParticipant] render', participant);\n        if (!participant) return null;\n\n        const { is_speaking, is_muted_for_all_users, is_muted_for_current_user, can_unmute_self, can_be_muted_for_all_users, can_be_unmuted_for_all_users } = participant;\n        const isMuted = is_muted_for_all_users || is_muted_for_current_user;\n\n        return (\n            <div className='group-call-participant' onClick={this.handleOpenContextMenu} onContextMenu={this.handleOpenContextMenu}>\n                <UserTile userId={userId}/>\n                <div className='group-call-participant-content'>\n                    <div className='group-call-participant-content-title'>\n                        {/*{userId}*/}\n                        {getUserFullName(userId)}\n                    </div>\n                    <div className={classNames('group-call-participant-content-subtitle', 'participant-listening', { 'participant-speaking': is_speaking })}>\n                        {/*{order}*/}\n                        {is_speaking ? t('Speaking') : t('Listening')}\n                    </div>\n                </div>\n                <div className={classNames('group-call-participant-mic', { 'participant-muted-by-admin': isMuted && !can_unmute_self, 'participant-speaking': is_speaking })}>\n                    {!isMuted || is_speaking ? <MicIcon /> : <MicOffIcon />}\n                </div>\n\n                <Popover\n                    classes={{\n                        paper: 'group-call-participant-menu-root'\n                    }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        { can_be_unmuted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleUnmute}>\n                                <ListItemText primary={t('VoipGroupUnmute')} />\n                            </MenuItem>\n                        )}\n                        { can_be_muted_for_all_users && (\n                            <MenuItem\n                                classes={{ root: 'group-call-participant-menu-item' }}\n                                ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                                TouchRippleProps={{\n                                    classes : {\n                                        child : 'group-call-participant-menu-item-ripple-child',\n                                        rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                    }\n                                }}\n                                onClick={this.handleMute}>\n                                <ListItemText primary={t('VoipGroupMute')} />\n                            </MenuItem>\n                        )}\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleOpenProfile}>\n                            <ListItemText primary={t('VoipGroupOpenProfile')} />\n                        </MenuItem>\n                        <MenuItem\n                            classes={{ root: 'group-call-participant-menu-item' }}\n                            ListItemClasses={{ focusVisible: 'group-call-participant-menu-item-focus-visible' }}\n                            TouchRippleProps={{\n                                classes : {\n                                    child : 'group-call-participant-menu-item-ripple-child',\n                                    rippleVisible : 'group-call-participant-menu-item-ripple-visible'\n                                }\n                            }}\n                            onClick={this.handleSendMessage}>\n                            <ListItemText primary={t('SendMessage')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n\n}\n\nGroupCallParticipant.propTypes = {\n    userId: PropTypes.number,\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipant);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\nimport GroupCallParticipant from './GroupCallParticipant';\nimport { albumHistoryEquals, orderCompare } from '../../Utils/Common';\nimport { canManageVoiceChats } from '../../Utils/Chat';\nimport { loadUsersContent } from '../../Utils/File';\nimport { PROFILE_PHOTO_PRELOAD_TIME_MS } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport FileStore from '../../Stores/FileStore';\nimport './GroupCallParticipants.css';\n\nclass GroupCallParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            participants: []\n        };\n\n        this.participantsMap = new Map();\n        // this.updateParticipants = throttle(this.updateParticipants, 1000);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { groupCallId } = props;\n        const { prevGroupCallId } = state;\n\n        if (prevGroupCallId !== groupCallId) {\n            const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n            const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n            return {\n                prevGroupCallId: groupCallId,\n                participants: participants.map(x => x.user_id)\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { participants } = this.state;\n        if (!albumHistoryEquals(participants, nextState.participants)) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.preloadContent();\n\n        CallStore.on('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('updateGroupCallParticipant', this.onUpdateGroupCallParticipant);\n    }\n\n    onUpdateGroupCallParticipant = update => {\n        const { groupCallId } = this.props;\n        const { group_call_id, participant } = update;\n        if (!participant) return;\n\n        if (group_call_id !== groupCallId) return;\n\n        const { order, user_id } = participant;\n        if (order !== '0') {\n            this.participantsMap.set(user_id, user_id);\n            this.loadContent();\n\n            // wait for profile photo\n            setTimeout(() => {\n                this.updateParticipants();\n            }, PROFILE_PHOTO_PRELOAD_TIME_MS);\n        } else {\n            this.updateParticipants();\n        }\n    };\n\n    updateParticipants() {\n        const { groupCallId } = this.props;\n\n        const participantsMap = CallStore.participants.get(groupCallId) || new Map();\n        const participants = Array.from(participantsMap.values()).filter(x => x.order !== '0').sort((a, b) => orderCompare(b.order, a.order));\n\n        this.setState({\n            participants: participants.map(x => x.user_id)\n        });\n    }\n\n    preloadContent = () => {\n        const { participants } = this.state;\n        if (!participants) return;\n        if (!participants.length) return;\n\n        participants.forEach(x => {\n            this.participantsMap.set(x, x);\n        });\n        this.loadContent();\n    };\n\n    loadContent = () => {\n        const { participantsMap } = this;\n        if (!participantsMap) return;\n        if (!participantsMap.size) return;\n\n        this.participantsMap = new Map();\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, Array.from(participantsMap.keys()));\n    }\n\n    render() {\n        const { t, groupCallId } = this.props;\n        const { participants } = this.state;\n        // console.log('[call][GroupCallParticipants] render');\n\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        const manageGroupCalls = canManageVoiceChats(chatId);\n\n        return (\n            <div className='group-call-participants'>\n                { manageGroupCalls && (\n                    <div className='group-call-participants-invite'>\n                        <AddMemberIcon/>\n                        <div className='group-call-participants-invite-text'>\n                            {t('VoipGroupInviteMember')}\n                        </div>\n                    </div>\n                )}\n                {participants.map(x => <GroupCallParticipant key={x} userId={x} groupCallId={groupCallId}/>)}\n            </div>\n        );\n    }\n}\n\nGroupCallParticipants.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallParticipants);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CallEndIcon from '../../Assets/Icons/CallEnd';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport GroupCallMicButton from './GroupCallMicButton';\nimport GroupCallPanelButtons from './GroupCallPanelButtons';\nimport GroupCallParticipants from './GroupCallParticipants';\nimport GroupCallSettings from './GroupCallSettings';\nimport GroupCallSettingsButton from './GroupCallSettingsButton';\nimport GroupCallSubtitle from './GroupCallJoinPanelSubtitle';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { getChatTitle } from '../../Utils/Chat';\nimport { stopPropagation } from '../../Utils/Message';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCallPanel.css';\n\nclass GroupCallPanel extends React.Component {\n    state = {\n        openSettings: false\n    };\n\n    handleClick = () => {\n        this.handleClose();\n    }\n\n    handleLeave = async event => {\n        event.stopPropagation();\n\n        const { currentGroupCall: call } = CallStore;\n        if (!call) return;\n\n        const { chatId, groupCallId } = call;\n\n        await CallStore.leaveGroupCall(chatId, groupCallId);\n    };\n\n    handleOpenSettings = async event => {\n        CallStore.devices = await navigator.mediaDevices.enumerateDevices();\n\n        this.setState({\n            openSettings: true\n        });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({\n            openSettings: false\n        });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    render() {\n        const { groupCallId, t } = this.props;\n        const { openSettings } = this.state;\n        const { currentGroupCall } = CallStore;\n        if (!currentGroupCall) return null;\n\n        const { chatId } = currentGroupCall;\n\n        return (\n            <div className='group-call-panel'>\n                <div className='group-call-panel-header'>\n                    <div className='group-call-panel-caption-button' onMouseDown={stopPropagation} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </div>\n                    <div className='group-call-panel-caption'>\n                        <div className='group-call-title'>{getChatTitle(chatId)}</div>\n                        <GroupCallSubtitle groupCallId={groupCallId} participantsOnly={true}/>\n                    </div>\n                    <div style={{ width: 48 }}/>\n                </div>\n                <div className='group-call-panel-participants scrollbars-hidden'>\n                    <GroupCallParticipants groupCallId={groupCallId}/>\n                </div>\n                <GroupCallPanelButtons>\n                    <GroupCallMicButton/>\n                    <div className='group-call-panel-button'>\n                        <GroupCallSettingsButton onClick={this.handleOpenSettings}/>\n                        <div className='group-call-panel-button-text'>\n                            {t('Settings')}\n                        </div>\n                    </div>\n                    <div className='group-call-panel-button'>\n                        <div className='group-call-panel-button-leave' onMouseDown={stopPropagation} onClick={this.handleLeave}>\n                            <CallEndIcon />\n                        </div>\n                        <div className='group-call-panel-button-text'>\n                            {t('Leave')}\n                        </div>\n                    </div>\n                </GroupCallPanelButtons>\n                {openSettings && <GroupCallSettings groupCallId={groupCallId} onClose={this.handleCloseSettings}/>}\n            </div>\n        );\n    }\n}\n\nGroupCallPanel.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default withTranslation()(GroupCallPanel);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport GroupCallPanel from './GroupCallPanel';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { clamp } from '../../Utils/Common';\nimport { closeGroupCallPanel } from '../../Actions/Call';\nimport { modalManager } from '../../Utils/Modal';\nimport { PIP_PLAYER_BORDER_PRECISION } from '../../Constants';\nimport CallStore from '../../Stores/CallStore';\nimport './GroupCall.css';\n\nclass GroupCall extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n\n        this.state = {\n            fullScreen: false\n        };\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        // const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.setPosition();\n\n        CallStore.on('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.add(this.keyboardHandler);\n        window.addEventListener('resize', this.onWindowResize);\n    }\n\n    componentWillUnmount() {\n        CallStore.off('clientUpdateGroupCallFullScreen', this.onClientUpdateGroupCallFullScreen);\n        KeyboardManager.remove(this.keyboardHandler);\n        window.removeEventListener('resize', this.onWindowResize);\n    }\n\n    onClientUpdateGroupCallFullScreen = update => {\n        const { fullscreen } = update;\n\n        this.setState({ fullscreen });\n    };\n\n    handleClose = () => {\n        closeGroupCallPanel();\n    };\n\n    handleMouseDown = event => {\n        if (event.nativeEvent.which !== 1) return;\n\n        const element = document.getElementById('group-call');\n        if (element) element.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        this.left = parseInt(element.style.left, 10);\n        this.top = parseInt(element.style.top, 10);\n        this.pageX = event.nativeEvent.pageX;\n        this.pageY = event.nativeEvent.pageY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.windowDragging = true;\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('group-call');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left: startLeft, top: startTop, pageX, pageY } = this;\n        const { left, top } = this.normalizePosition(startLeft + event.pageX - pageX, startTop + event.pageY - pageY, false);\n\n        const element = document.getElementById('group-call');\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.windowDragging = false;\n    };\n\n    setPosition() {\n        const element = document.getElementById('group-call');\n        let { pipParams } = CallStore;\n        if (!pipParams) {\n            pipParams = {\n                left: (window.document.documentElement.clientWidth - element.clientWidth) / 2,\n                top: (window.document.documentElement.clientHeight - element.clientHeight) / 2\n            }\n        }\n\n        const { left: prevLeft, top: prevTop } = pipParams;\n\n        const { left, top } = this.normalizePosition(prevLeft, prevTop, false);\n\n        element.style.left = left + 'px';\n        element.style.top = top + 'px';\n    }\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('group-call');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        CallStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    render() {\n        const { groupCallId } = this.props;\n        const { fullscreen } = this.state;\n\n        return (\n            <div\n                id='group-call'\n                className={classNames('group-call', { 'group-call-fullscreen': fullscreen })}\n                onMouseDown={this.handleMouseDown}\n            >\n                <GroupCallPanel groupCallId={groupCallId}/>\n            </div>\n        )\n    }\n}\n\nGroupCall.propTypes = {\n    groupCallId: PropTypes.number\n};\n\nexport default GroupCall;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport Actions from './Actions';\nimport Call from './Calls/Call';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport GroupCall from './Calls/GroupCall';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport PipPlayer from './Player/PipPlayer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport CallStore from '../Stores/CallStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null,\n            groupCallId: 0,\n            callId: 0\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.on('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.on('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        CallStore.off('clientUpdateGroupCallPanel', this.onClientUpdateGroupCallPanel);\n        CallStore.off('clientUpdateCallPanel', this.onClientUpdateCallPanel);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdateCallPanel = update => {\n        const { opened, callId } = update;\n\n        this.setState({\n            callId: opened ? callId : 0\n        });\n    };\n\n    onClientUpdateGroupCallPanel = update => {\n        const { opened } = update;\n        const { currentGroupCall } = CallStore;\n\n        this.setState({\n            groupCallId: currentGroupCall && opened ? currentGroupCall.groupCallId : 0\n        });\n    };\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup, options } = update;\n\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false, options = null) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId && !options) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId, options);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            callId,\n            groupCallId,\n            isSmallWidth\n        } = this.state;\n\n        console.log('[p2p] mainPage.render', callId);\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n                {groupCallId && <GroupCall groupCallId={groupCallId}/>}\n                {callId && <Call callId={callId}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}